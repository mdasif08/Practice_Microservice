<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="268" skipped="0" tests="758" time="19.043" timestamp="2025-08-17T11:46:41.353170+05:30" hostname="LAPTOP-N2TJH14N"><testcase classname="final_coverage_test" name="test_source_file_analysis" time="0.154" /><testcase classname="final_coverage_test" name="test_track_commit_file" time="0.002" /><testcase classname="final_coverage_test" name="test_config_manager" time="0.014"><failure message="assert 'import logging' in '&quot;&quot;&quot;\nConfiguration Manager - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis module manages application configuration loading and validation.\n&quot;&quot;&quot;\n\nimport os\nimport yaml\nfrom typing import Dict, Any, Optional\nfrom pathlib import Path\n\nfrom ..utils.logger import get_logger\nfrom ..utils.error_handler import ConfigurationError\n\nlogger = get_logger(__name__)\n\n_config_cache: Optional[Dict[str, Any]] = None\n\n\ndef get_config(config_path: Optional[str] = None) -&gt; Dict[str, Any]:\n    &quot;&quot;&quot;\n    Get application configuration, loading from file if not cached.\n    \n    Args:\n        config_path: Optional path to config file\n        \n    Returns:\n        Configuration dictionary\n        \n    Raises:\n        ConfigurationError: If configuration cannot be loaded\n    &quot;&quot;&quot;\n    global _config_cache\n    \n    if _config_cache is not None:\n        return _config_cache\n    \n    if config_path is None:\n        # Default config path\n        config_path = Path(__file__).parent / \'app_config.yaml\'\n    \n    config_path = Path(config_path)\n    \n    if not config_path.exists():\n        logger.warning(f&quot;Config file not found at {config_path}, creating defa...]) -&gt; Dict[str, Any]:\n    &quot;&quot;&quot;\n    Update configuration with new values.\n    \n    Args:\n        updates: Dictionary of configuration updates\n        \n    Returns:\n        Updated configuration dictionary\n    &quot;&quot;&quot;\n    global _config_cache\n    \n    if _config_cache is None:\n        _config_cache = get_config()\n    \n    _config_cache = deep_merge(_config_cache, updates)\n    validate_config(_config_cache)\n    \n    logger.info(&quot;Configuration updated successfully&quot;)\n    return _config_cache\n\n\ndef deep_merge(base: Dict[str, Any], updates: Dict[str, Any]) -&gt; Dict[str, Any]:\n    &quot;&quot;&quot;\n    Deep merge two dictionaries.\n    \n    Args:\n        base: Base dictionary\n        updates: Updates to apply\n        \n    Returns:\n        Merged dictionary\n    &quot;&quot;&quot;\n    result = base.copy()\n    \n    for key, value in updates.items():\n        if key in result and isinstance(result[key], dict) and isinstance(value, dict):\n            result[key] = deep_merge(result[key], value)\n        else:\n            result[key] = value\n    \n    return result\n\n\n__all__ = [\n    \'get_config\', \'get_config_value\', \'reload_config\', \'update_config\', \'create_default_config\'\n]\n'">final_coverage_test.py:155: in test_config_manager
    assert 'import logging' in content
E   assert 'import logging' in '"""\nConfiguration Manager - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis module manages application configuration loading and validation.\n"""\n\nimport os\nimport yaml\nfrom typing import Dict, Any, Optional\nfrom pathlib import Path\n\nfrom ..utils.logger import get_logger\nfrom ..utils.error_handler import ConfigurationError\n\nlogger = get_logger(__name__)\n\n_config_cache: Optional[Dict[str, Any]] = None\n\n\ndef get_config(config_path: Optional[str] = None) -&gt; Dict[str, Any]:\n    """\n    Get application configuration, loading from file if not cached.\n    \n    Args:\n        config_path: Optional path to config file\n        \n    Returns:\n        Configuration dictionary\n        \n    Raises:\n        ConfigurationError: If configuration cannot be loaded\n    """\n    global _config_cache\n    \n    if _config_cache is not None:\n        return _config_cache\n    \n    if config_path is None:\n        # Default config path\n        config_path = Path(__file__).parent / \'app_config.yaml\'\n    \n    config_path = Path(config_path)\n    \n    if not config_path.exists():\n        logger.warning(f"Config file not found at {config_path}, creating defa...]) -&gt; Dict[str, Any]:\n    """\n    Update configuration with new values.\n    \n    Args:\n        updates: Dictionary of configuration updates\n        \n    Returns:\n        Updated configuration dictionary\n    """\n    global _config_cache\n    \n    if _config_cache is None:\n        _config_cache = get_config()\n    \n    _config_cache = deep_merge(_config_cache, updates)\n    validate_config(_config_cache)\n    \n    logger.info("Configuration updated successfully")\n    return _config_cache\n\n\ndef deep_merge(base: Dict[str, Any], updates: Dict[str, Any]) -&gt; Dict[str, Any]:\n    """\n    Deep merge two dictionaries.\n    \n    Args:\n        base: Base dictionary\n        updates: Updates to apply\n        \n    Returns:\n        Merged dictionary\n    """\n    result = base.copy()\n    \n    for key, value in updates.items():\n        if key in result and isinstance(result[key], dict) and isinstance(value, dict):\n            result[key] = deep_merge(result[key], value)\n        else:\n            result[key] = value\n    \n    return result\n\n\n__all__ = [\n    \'get_config\', \'get_config_value\', \'reload_config\', \'update_config\', \'create_default_config\'\n]\n'</failure></testcase><testcase classname="final_coverage_test" name="test_logger" time="0.003" /><testcase classname="final_coverage_test" name="test_error_handler" time="0.002"><failure message="assert 'import logging' in '&quot;&quot;&quot;\nShared Error Handler Utility - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis module provides consistent error handling functionality across all services.\n&quot;&quot;&quot;\n\nimport traceback\nimport sys\nfrom typing import Dict, Any, Optional, Type\nfrom datetime import datetime, timezone\n\nfrom .logger import get_logger\n\nlogger = get_logger(__name__)\n\n\nclass CraftNudgeError(Exception):\n    &quot;&quot;&quot;Base exception class for CraftNudge AI Agent.&quot;&quot;&quot;\n    \n    def __init__(self, message: str, error_code: Optional[str] = None, details: Optional[Dict[str, Any]] = None):\n        super().__init__(message)\n        self.message = message\n        self.error_code = error_code\n        self.details = details or {}\n        self.timestamp = datetime.now(timezone.utc).isoformat()\n\n\nclass GitRepositoryError(CraftNudgeError):\n    &quot;&quot;&quot;Raised when Git repository operations fail.&quot;&quot;&quot;\n    pass\n\n\nclass DataStoreError(CraftNudgeError):\n    &quot;&quot;&quot;Raised when data store operations fail.&quot;&quot;&quot;\n    pass\n\n\nclass ValidationError(CraftNudgeError):\n    &quot;&quot;&quot;Raised when data validation fails.&quot;&quot;&quot;\n    pass\n\n\nclass ConfigurationError(CraftNudgeError):\n    &quot;&quot;&quot;Raised when configuration is i...elay = delay\n    \n    for attempt in range(max_retries + 1):\n        try:\n            result = func(*args, **kwargs)\n            return {\n                \'status\': \'success\',\n                \'result\': result,\n                \'attempts\': attempt + 1\n            }\n        except Exception as e:\n            last_error = e\n            logger.warning(f&quot;Attempt {attempt + 1} failed: {e}&quot;)\n            \n            if attempt &lt; max_retries:\n                logger.info(f&quot;Retrying in {current_delay} seconds...&quot;)\n                time.sleep(current_delay)\n                current_delay *= backoff_factor\n            else:\n                logger.error(f&quot;All {max_retries + 1} attempts failed&quot;)\n    \n    return handle_error(\n        last_error,\n        f&quot;retry_on_error({func.__name__})&quot;,\n        error_code=&quot;MAX_RETRIES_EXCEEDED&quot;,\n        details={\'max_retries\': max_retries, \'attempts\': max_retries + 1}\n    )\n\n\n__all__ = [\n    \'CraftNudgeError\', \'GitRepositoryError\', \'DataStoreError\', \'ValidationError\',\n    \'ConfigurationError\', \'handle_error\', \'validate_required_fields\',\n    \'validate_field_type\', \'safe_execute\', \'retry_on_error\'\n]\n'">final_coverage_test.py:265: in test_error_handler
    assert 'import logging' in content
E   assert 'import logging' in '"""\nShared Error Handler Utility - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis module provides consistent error handling functionality across all services.\n"""\n\nimport traceback\nimport sys\nfrom typing import Dict, Any, Optional, Type\nfrom datetime import datetime, timezone\n\nfrom .logger import get_logger\n\nlogger = get_logger(__name__)\n\n\nclass CraftNudgeError(Exception):\n    """Base exception class for CraftNudge AI Agent."""\n    \n    def __init__(self, message: str, error_code: Optional[str] = None, details: Optional[Dict[str, Any]] = None):\n        super().__init__(message)\n        self.message = message\n        self.error_code = error_code\n        self.details = details or {}\n        self.timestamp = datetime.now(timezone.utc).isoformat()\n\n\nclass GitRepositoryError(CraftNudgeError):\n    """Raised when Git repository operations fail."""\n    pass\n\n\nclass DataStoreError(CraftNudgeError):\n    """Raised when data store operations fail."""\n    pass\n\n\nclass ValidationError(CraftNudgeError):\n    """Raised when data validation fails."""\n    pass\n\n\nclass ConfigurationError(CraftNudgeError):\n    """Raised when configuration is i...elay = delay\n    \n    for attempt in range(max_retries + 1):\n        try:\n            result = func(*args, **kwargs)\n            return {\n                \'status\': \'success\',\n                \'result\': result,\n                \'attempts\': attempt + 1\n            }\n        except Exception as e:\n            last_error = e\n            logger.warning(f"Attempt {attempt + 1} failed: {e}")\n            \n            if attempt &lt; max_retries:\n                logger.info(f"Retrying in {current_delay} seconds...")\n                time.sleep(current_delay)\n                current_delay *= backoff_factor\n            else:\n                logger.error(f"All {max_retries + 1} attempts failed")\n    \n    return handle_error(\n        last_error,\n        f"retry_on_error({func.__name__})",\n        error_code="MAX_RETRIES_EXCEEDED",\n        details={\'max_retries\': max_retries, \'attempts\': max_retries + 1}\n    )\n\n\n__all__ = [\n    \'CraftNudgeError\', \'GitRepositoryError\', \'DataStoreError\', \'ValidationError\',\n    \'ConfigurationError\', \'handle_error\', \'validate_required_fields\',\n    \'validate_field_type\', \'safe_execute\', \'retry_on_error\'\n]\n'</failure></testcase><testcase classname="final_coverage_test" name="test_init_files" time="0.002" /><testcase classname="final_coverage_test" name="test_project_structure" time="0.002" /><testcase classname="final_coverage_test" name="test_config_files" time="0.026" /><testcase classname="final_coverage_test" name="test_documentation_files" time="0.002" /><testcase classname="final_coverage_test" name="test_integration" time="0.002" /><testcase classname="final_coverage_test" name="test_error_handling_integration" time="0.002" /><testcase classname="final_coverage_test" name="test_file_permissions" time="0.022" /><testcase classname="final_coverage_test" name="test_code_quality" time="0.024" /><testcase classname="final_coverage_test" name="test_coverage_validation" time="0.003" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_complete_commit_tracking_workflow" time="0.004" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_data_persistence_across_sessions" time="0.002" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_cli_git_integration" time="0.002" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_error_recovery_and_resilience" time="0.002" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_performance_with_large_repositories" time="0.002" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_multi_user_scenarios" time="0.002" /><testcase classname="tests.e2e.test_commit_tracking_e2e.TestCommitTrackingE2E" name="test_data_migration_and_upgrades" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_help_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_latest_commit_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_hash_commit_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_repository_info_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_list_commits_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_search_commits_command" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_output_formats" time="0.002" /><testcase classname="tests.integration.test_cli_integration.TestCLIIntegration" name="test_cli_error_handling" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_commit_tracker_service_integration" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_data_writer_service_integration" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_shared_utilities_integration" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_configuration_management_integration" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_error_handling_across_services" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_service_communication_patterns" time="0.002" /><testcase classname="tests.integration.test_service_integration.TestServiceIntegration" name="test_service_lifecycle_management" time="0.002" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_successful_execution" time="0.004"><failure message="AssertionError: Expected 'setup_logger' to be called once. Called 0 times.">tests\unit\test_basic_usage.py:68: in test_main_successful_execution
    mock_setup_logger.assert_called_once_with(log_level="INFO")
C:\Python313\Lib\unittest\mock.py:990: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'setup_logger' to be called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_repository_info_error" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_commit_tracking_error" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_commit_with_many_files" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_commit_with_few_files" time="0.004" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_commit_with_no_files" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_exception_handling" time="0.004"><failure message="AssertionError: Expected 'error' to have been called once. Called 0 times.">tests\unit\test_basic_usage.py:330: in test_main_exception_handling
    mock_logger.error.assert_called_once()
C:\Python313\Lib\unittest\mock.py:958: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'error' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_missing_repository_info_fields" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsage" name="test_main_missing_commit_data_fields" time="0.004"><failure message="assert False&#10; +  where False = any(&lt;generator object TestBasicUsage.test_main_missing_commit_data_fields.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6F98FB0&gt;)">tests\unit\test_basic_usage.py:436: in test_main_missing_commit_data_fields
    assert any("  Author: N/A" in call for call in print_calls)
E   assert False
E    +  where False = any(&lt;generator object TestBasicUsage.test_main_missing_commit_data_fields.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6F98FB0&gt;)</failure></testcase><testcase classname="tests.unit.test_basic_usage.TestBasicUsageIntegration" name="test_complete_workflow_success" time="0.003"><failure message="AssertionError: Expected 'setup_logger' to be called once. Called 0 times.">tests\unit\test_basic_usage.py:494: in test_complete_workflow_success
    mock_setup_logger.assert_called_once_with(log_level="INFO")
C:\Python313\Lib\unittest\mock.py:990: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'setup_logger' to be called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_basic_usage.TestBasicUsageIntegration" name="test_various_repository_configurations[/test/repo1-https://github.com/test/repo1.git-main-10]" time="0.004" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsageIntegration" name="test_various_repository_configurations[/test/repo2-https://gitlab.com/test/repo2.git-develop-25]" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsageIntegration" name="test_various_repository_configurations[/test/repo3-None-feature/new-feature-5]" time="0.003"><failure message="assert False&#10; +  where False = any(&lt;generator object TestBasicUsageIntegration.test_various_repository_configurations.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6E8A670&gt;)">tests\unit\test_basic_usage.py:567: in test_various_repository_configurations
    assert any("  Remote: N/A" in call for call in print_calls)
E   assert False
E    +  where False = any(&lt;generator object TestBasicUsageIntegration.test_various_repository_configurations.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6E8A670&gt;)</failure></testcase><testcase classname="tests.unit.test_basic_usage.TestBasicUsageIntegration" name="test_various_repository_configurations[/test/repo4-https://bitbucket.org/test/repo4.git-master-100]" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsageEdgeCases" name="test_main_with_empty_strings" time="0.003" /><testcase classname="tests.unit.test_basic_usage.TestBasicUsageEdgeCases" name="test_main_with_none_values" time="0.003"><failure message="assert False&#10; +  where False = any(&lt;generator object TestBasicUsageEdgeCases.test_main_with_none_values.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6A2CE10&gt;)">tests\unit\test_basic_usage.py:678: in test_main_with_none_values
    assert any("  Path: N/A" in call for call in print_calls)
E   assert False
E    +  where False = any(&lt;generator object TestBasicUsageEdgeCases.test_main_with_none_values.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6A2CE10&gt;)</failure></testcase><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_exists" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_is_python_file" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_is_readable" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_has_content" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_starts_with_docstring" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_cli_commands" time="0.004" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_behavior_tracker" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_git_commit_logger" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_user_story" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_cli_command" time="0.002"><failure message="assert 'cli command' in '&quot;&quot;&quot;\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n&quot;&quot;&quot;\n'">tests\unit\test_cli_commands_init.py:69: in test_docstring_contains_cli_command
    assert "cli command" in cli_commands_content
E   assert 'cli command' in '"""\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n"""\n'</failure></testcase><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_contains_implementations" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_formatting" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_completeness" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_quality" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_accuracy" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_consistency_with_project" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_maintainability" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_package_purpose_clarity" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_brevity_and_clarity" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_cli_commands_specific_terminology" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_package_abbreviation_consistency" time="0.002"><failure message="assert 'cli command' in '&quot;&quot;&quot;\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n&quot;&quot;&quot;\n'">tests\unit\test_cli_commands_init.py:144: in test_package_abbreviation_consistency
    assert "cli command" in cli_commands_content
E   assert 'cli command' in '"""\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n"""\n'</failure></testcase><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_commands_specific_content" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_package_hierarchy_consistency" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_encoding" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_line_count" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_content_structure" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_educational_value" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_technical_accuracy" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_naming_convention" time="0.001" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_readability" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_package_documentation_standards" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_permissions" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_size" time="0.001" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_file_path_structure" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_content_validation" time="0.002"><failure message="AssertionError: Missing required element: cli command&#10;assert 'cli command' in '&quot;&quot;&quot;\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n&quot;&quot;&quot;\n'">tests\unit\test_cli_commands_init.py:240: in test_docstring_content_validation
    assert element in cli_commands_content, f"Missing required element: {element}"
E   AssertionError: Missing required element: cli command
E   assert 'cli command' in '"""\nCLI Commands - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains CLI command implementations.\n"""\n'</failure></testcase><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_docstring_format_validation" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_package_metadata_validation" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_cli_specific_validation" time="0.002" /><testcase classname="tests.unit.test_cli_commands_init.TestCLICommandsInit" name="test_documentation_quality_validation" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_short" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_long" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_multiline" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_empty" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_different_lengths[10]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_different_lengths[50]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_different_lengths[100]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestFormatCommitMessage" name="test_format_commit_message_different_lengths[200]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_valid" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_invalid" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_relative" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_empty" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_various_formats[/absolute/path]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_various_formats[./relative/path]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_various_formats[../parent/path]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_various_formats[~/home/path]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestValidateRepositoryPath" name="test_validate_repository_path_various_formats[C:\\Windows\\path]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetRepositoryStatus" name="test_get_repository_status_valid_repo" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetRepositoryStatus" name="test_get_repository_status_invalid_repo" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetRepositoryStatus" name="test_get_repository_status_empty_path" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_various_formats[2023-01-01T12:00:00+00:00]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_various_formats[2023-01-01T12:00:00Z]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_various_formats[2023-01-01T12:00:00-05:00]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_various_formats[2023-01-01T12:00:00.123456+00:00]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_invalid_format" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestFormatTimestamp" name="test_format_timestamp_empty" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCalculateCommitStats" name="test_calculate_commit_stats_empty_list" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCalculateCommitStats" name="test_calculate_commit_stats_single_commit" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCalculateCommitStats" name="test_calculate_commit_stats_multiple_commits" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestCalculateCommitStats" name="test_calculate_commit_stats_missing_fields" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_csv" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_json" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_xml" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_invalid_format" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_empty_list" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_various_formats[csv]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_various_formats[json]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_various_formats[xml]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_various_formats[yaml]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestExportCommitsToFormat" name="test_export_commits_to_format_various_formats[html]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestInteractiveCommitSelection" name="test_interactive_commit_selection_single_commit" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestInteractiveCommitSelection" name="test_interactive_commit_selection_multiple_commits" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestInteractiveCommitSelection" name="test_interactive_commit_selection_empty_list" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestSetupLoggingForCLI" name="test_setup_logging_for_cli_default" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestSetupLoggingForCLI" name="test_setup_logging_for_cli_with_log_file" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestSetupLoggingForCLI" name="test_setup_logging_for_cli_different_levels" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestSetupLoggingForCLI" name="test_setup_logging_for_cli_none_log_file" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_start" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_middle" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_complete" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_zero_total" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_large_numbers" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_empty_description" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[0-100]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[25-100]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[50-100]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[75-100]" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[100-100]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[0-0]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestDisplayProgressBar" name="test_display_progress_bar_various_progress[1000-10000]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestConfirmAction" name="test_confirm_action_default_true" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestConfirmAction" name="test_confirm_action_default_false" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestConfirmAction" name="test_confirm_action_empty_message" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestConfirmAction" name="test_confirm_action_long_message" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_with_default" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_required" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_not_required" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_empty_default" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_empty_prompt" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_various_combinations[Enter name:-John Doe-True]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_various_combinations[Enter email:--False]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_various_combinations[Enter age:-25-True]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestGetUserInput" name="test_get_user_input_various_combinations[Enter description:-No description-False]" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersIntegration" name="test_cli_helpers_workflow" time="0.002" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersEdgeCases" name="test_format_commit_message_edge_cases" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersEdgeCases" name="test_validate_repository_path_edge_cases" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersEdgeCases" name="test_format_timestamp_edge_cases" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersEdgeCases" name="test_calculate_commit_stats_edge_cases" time="0.001" /><testcase classname="tests.unit.test_cli_helpers.TestCLIHelpersEdgeCases" name="test_export_commits_to_format_edge_cases" time="0.001" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_formatting" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt; = 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.'.startswith&#10; +      where 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.' = &lt;built-in method strip of str object at 0x00000175C6FF9680&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6FF9680&gt; = '\nCLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.\n'.strip">tests\unit\test_cli_init.py:48: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt; = 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.'.startswith
E    +      where 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.' = &lt;built-in method strip of str object at 0x00000175C6FF9680&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6FF9680&gt; = '\nCLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.\n'.strip</failure></testcase><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_structure" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_import_performance" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_multiple_imports_behavior" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_initialization_completeness" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_content_accuracy" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_metadata_consistency" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_module_attributes_existence" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_import_path" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_initialization_robustness" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_completeness" time="0.003" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_import_consistency" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_quality" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFA790&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FFA790&gt; = 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.'.startswith&#10; +      where 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.' = &lt;built-in method strip of str object at 0x00000175C6FF8420&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6FF8420&gt; = '\nCLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.\n'.strip">tests\unit\test_cli_init.py:203: in test_docstring_quality
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFA790&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FFA790&gt; = 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.'.startswith
E    +      where 'CLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.' = &lt;built-in method strip of str object at 0x00000175C6FF8420&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6FF8420&gt; = '\nCLI Interface - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the command-line interface components.\n'.strip</failure></testcase><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_naming_convention" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_accuracy" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_initialization_cleanliness" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_consistency_with_project" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_import_reliability" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_maintainability" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_purpose_clarity" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_brevity_and_clarity" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_import_simplicity" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_docstring_consistency_across_imports" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_cli_specific_terminology" time="0.002" /><testcase classname="tests.unit.test_cli_init.TestCLIInit" name="test_package_abbreviation_consistency" time="0.002" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_package_version" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_package_docstring" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_all_list_definition" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_format_commit_message_import" time="0.004"><failure message="AssertionError: assert &lt;function format_commit_message at 0x00000175C6A9F560&gt; == &lt;MagicMock name='format_commit_message' id='1605361444112'&gt;&#10; +  where &lt;function format_commit_message at 0x00000175C6A9F560&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_commit_message">tests\unit\test_cli_utils_init.py:116: in test_format_commit_message_import
    assert cli_utils_package.format_commit_message == mock_format_commit
E   AssertionError: assert &lt;function format_commit_message at 0x00000175C6A9F560&gt; == &lt;MagicMock name='format_commit_message' id='1605361444112'&gt;
E    +  where &lt;function format_commit_message at 0x00000175C6A9F560&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_commit_message</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_validate_repository_path_import" time="0.005"><failure message="AssertionError: assert &lt;function validate_repository_path at 0x00000175C6A9F6A0&gt; == &lt;MagicMock name='validate_repository_path' id='1605361437728'&gt;&#10; +  where &lt;function validate_repository_path at 0x00000175C6A9F6A0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.validate_repository_path">tests\unit\test_cli_utils_init.py:134: in test_validate_repository_path_import
    assert cli_utils_package.validate_repository_path == mock_validate_path
E   AssertionError: assert &lt;function validate_repository_path at 0x00000175C6A9F6A0&gt; == &lt;MagicMock name='validate_repository_path' id='1605361437728'&gt;
E    +  where &lt;function validate_repository_path at 0x00000175C6A9F6A0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.validate_repository_path</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_get_repository_status_import" time="0.004"><failure message="AssertionError: assert &lt;function get_repository_status at 0x00000175C6A9F600&gt; == &lt;MagicMock name='get_repository_status' id='1605359522144'&gt;&#10; +  where &lt;function get_repository_status at 0x00000175C6A9F600&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.get_repository_status">tests\unit\test_cli_utils_init.py:152: in test_get_repository_status_import
    assert cli_utils_package.get_repository_status == mock_get_status
E   AssertionError: assert &lt;function get_repository_status at 0x00000175C6A9F600&gt; == &lt;MagicMock name='get_repository_status' id='1605359522144'&gt;
E    +  where &lt;function get_repository_status at 0x00000175C6A9F600&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.get_repository_status</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_format_timestamp_import" time="0.005"><failure message="AssertionError: assert &lt;function format_timestamp at 0x00000175C6A9F740&gt; == &lt;MagicMock name='format_timestamp' id='1605361447808'&gt;&#10; +  where &lt;function format_timestamp at 0x00000175C6A9F740&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_timestamp">tests\unit\test_cli_utils_init.py:170: in test_format_timestamp_import
    assert cli_utils_package.format_timestamp == mock_format_timestamp
E   AssertionError: assert &lt;function format_timestamp at 0x00000175C6A9F740&gt; == &lt;MagicMock name='format_timestamp' id='1605361447808'&gt;
E    +  where &lt;function format_timestamp at 0x00000175C6A9F740&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_timestamp</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_calculate_commit_stats_import" time="0.005"><failure message="AssertionError: assert &lt;function calculate_commit_stats at 0x00000175C6A9F7E0&gt; == &lt;MagicMock name='calculate_commit_stats' id='1605361128784'&gt;&#10; +  where &lt;function calculate_commit_stats at 0x00000175C6A9F7E0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.calculate_commit_stats">tests\unit\test_cli_utils_init.py:188: in test_calculate_commit_stats_import
    assert cli_utils_package.calculate_commit_stats == mock_calculate_stats
E   AssertionError: assert &lt;function calculate_commit_stats at 0x00000175C6A9F7E0&gt; == &lt;MagicMock name='calculate_commit_stats' id='1605361128784'&gt;
E    +  where &lt;function calculate_commit_stats at 0x00000175C6A9F7E0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.calculate_commit_stats</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_export_commits_to_format_import" time="0.005"><failure message="AssertionError: assert &lt;function export_commits_to_format at 0x00000175C6A9F880&gt; == &lt;MagicMock name='export_commits_to_format' id='1605361132480'&gt;&#10; +  where &lt;function export_commits_to_format at 0x00000175C6A9F880&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.export_commits_to_format">tests\unit\test_cli_utils_init.py:206: in test_export_commits_to_format_import
    assert cli_utils_package.export_commits_to_format == mock_export_commits
E   AssertionError: assert &lt;function export_commits_to_format at 0x00000175C6A9F880&gt; == &lt;MagicMock name='export_commits_to_format' id='1605361132480'&gt;
E    +  where &lt;function export_commits_to_format at 0x00000175C6A9F880&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.export_commits_to_format</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_interactive_commit_selection_import" time="0.005"><failure message="AssertionError: assert &lt;function interactive_commit_selection at 0x00000175C6A9F920&gt; == &lt;MagicMock name='interactive_commit_selection' id='1605361125424'&gt;&#10; +  where &lt;function interactive_commit_selection at 0x00000175C6A9F920&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.interactive_commit_selection">tests\unit\test_cli_utils_init.py:224: in test_interactive_commit_selection_import
    assert cli_utils_package.interactive_commit_selection == mock_interactive
E   AssertionError: assert &lt;function interactive_commit_selection at 0x00000175C6A9F920&gt; == &lt;MagicMock name='interactive_commit_selection' id='1605361125424'&gt;
E    +  where &lt;function interactive_commit_selection at 0x00000175C6A9F920&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.interactive_commit_selection</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_setup_logging_for_cli_import" time="0.005"><failure message="AssertionError: assert &lt;function setup_logging_for_cli at 0x00000175C6A9F9C0&gt; == &lt;MagicMock name='setup_logging_for_cli' id='1605361440416'&gt;&#10; +  where &lt;function setup_logging_for_cli at 0x00000175C6A9F9C0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.setup_logging_for_cli">tests\unit\test_cli_utils_init.py:242: in test_setup_logging_for_cli_import
    assert cli_utils_package.setup_logging_for_cli == mock_setup_logging
E   AssertionError: assert &lt;function setup_logging_for_cli at 0x00000175C6A9F9C0&gt; == &lt;MagicMock name='setup_logging_for_cli' id='1605361440416'&gt;
E    +  where &lt;function setup_logging_for_cli at 0x00000175C6A9F9C0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.setup_logging_for_cli</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_display_progress_bar_import" time="0.004"><failure message="AssertionError: assert &lt;function display_progress_bar at 0x00000175C6A9FA60&gt; == &lt;MagicMock name='display_progress_bar' id='1605361442432'&gt;&#10; +  where &lt;function display_progress_bar at 0x00000175C6A9FA60&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.display_progress_bar">tests\unit\test_cli_utils_init.py:260: in test_display_progress_bar_import
    assert cli_utils_package.display_progress_bar == mock_progress_bar
E   AssertionError: assert &lt;function display_progress_bar at 0x00000175C6A9FA60&gt; == &lt;MagicMock name='display_progress_bar' id='1605361442432'&gt;
E    +  where &lt;function display_progress_bar at 0x00000175C6A9FA60&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.display_progress_bar</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_confirm_action_import" time="0.005"><failure message="AssertionError: assert &lt;function confirm_action at 0x00000175C6A9FB00&gt; == &lt;MagicMock name='confirm_action' id='1605361446800'&gt;&#10; +  where &lt;function confirm_action at 0x00000175C6A9FB00&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.confirm_action">tests\unit\test_cli_utils_init.py:278: in test_confirm_action_import
    assert cli_utils_package.confirm_action == mock_confirm
E   AssertionError: assert &lt;function confirm_action at 0x00000175C6A9FB00&gt; == &lt;MagicMock name='confirm_action' id='1605361446800'&gt;
E    +  where &lt;function confirm_action at 0x00000175C6A9FB00&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.confirm_action</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_get_user_input_import" time="0.005"><failure message="AssertionError: assert &lt;function get_user_input at 0x00000175C6A9FBA0&gt; == &lt;MagicMock name='get_user_input' id='1605361443776'&gt;&#10; +  where &lt;function get_user_input at 0x00000175C6A9FBA0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.get_user_input">tests\unit\test_cli_utils_init.py:296: in test_get_user_input_import
    assert cli_utils_package.get_user_input == mock_get_input
E   AssertionError: assert &lt;function get_user_input at 0x00000175C6A9FBA0&gt; == &lt;MagicMock name='get_user_input' id='1605361443776'&gt;
E    +  where &lt;function get_user_input at 0x00000175C6A9FBA0&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.get_user_input</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_import_error_handling_cli_helpers" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_cli_utils_init.py:302: in test_import_error_handling_cli_helpers
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_all_imports_available" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_import_statement_order" time="0.005"><failure message="assert False&#10; +  where False = any(&lt;generator object TestCLIUtilsInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6F7A330&gt;)">tests\unit\test_cli_utils_init.py:340: in test_import_statement_order
    assert any('from .cli_helpers import (' in line
E   assert False
E    +  where False = any(&lt;generator object TestCLIUtilsInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C6F7A330&gt;)</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_package_metadata_consistency" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_module_attributes_existence" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_import_performance" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_multiple_imports_behavior" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_export_consistency" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_docstring_formatting" time="0.004"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt; = 'CLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.'.startswith&#10; +      where 'CLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.' = &lt;built-in method strip of str object at 0x00000175C6E25290&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E25290&gt; = '\nCLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.\n'.strip">tests\unit\test_cli_utils_init.py:505: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt; = 'CLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.'.startswith
E    +      where 'CLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.' = &lt;built-in method strip of str object at 0x00000175C6E25290&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E25290&gt; = '\nCLI Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains utility functions for CLI functionality.\n'.strip</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_version_format" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_import_paths_accuracy" time="0.004"><failure message="assert False&#10; +  where False = any(&lt;generator object TestCLIUtilsInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7073E00&gt;)">tests\unit\test_cli_utils_init.py:555: in test_import_paths_accuracy
    assert any('from .cli_helpers import (' in line
E   assert False
E    +  where False = any(&lt;generator object TestCLIUtilsInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7073E00&gt;)</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_package_initialization_completeness" time="0.004" /><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_function_availability" time="0.005"><failure message="AssertionError: assert &lt;function format_commit_message at 0x00000175C6A9F560&gt; == &lt;MagicMock name='format_commit_message' id='1605359522144'&gt;&#10; +  where &lt;function format_commit_message at 0x00000175C6A9F560&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_commit_message">tests\unit\test_cli_utils_init.py:655: in test_function_availability
    assert cli_utils_package.format_commit_message == mock_format_commit
E   AssertionError: assert &lt;function format_commit_message at 0x00000175C6A9F560&gt; == &lt;MagicMock name='format_commit_message' id='1605359522144'&gt;
E    +  where &lt;function format_commit_message at 0x00000175C6A9F560&gt; = &lt;module 'cli.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\utils\\__init__.py'&gt;.format_commit_message</failure></testcase><testcase classname="tests.unit.test_cli_utils_init.TestCLIUtilsInit" name="test_function_signatures" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_init_with_custom_path" time="0.039" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_init_with_default_path" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_init_with_string_path" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_init_creates_dependencies" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_latest_commit_success" time="0.006" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_latest_commit_no_git_repository" time="0.005" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_latest_commit_git_error" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_commit_by_hash_success" time="0.006" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_commit_by_hash_no_git_repository" time="0.005" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_log_commit_by_hash_git_error" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_valid" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_missing_field[hash]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_missing_field[author]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_missing_field[message]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_missing_field[timestamp]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_missing_field[changed_files]" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_none_field" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_hash[abc]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_hash[]" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_hash[None]" time="0.003"><failure message="AssertionError: assert 'Invalid commit hash format' in 'Missing required field: hash'&#10; +  where 'Missing required field: hash' = str(ValueError('Missing required field: hash'))&#10; +    where ValueError('Missing required field: hash') = &lt;ExceptionInfo ValueError('Missing required field: hash') tblen=2&gt;.value">tests\unit\test_commit_tracker.py:309: in test_validate_commit_data_invalid_hash
    assert "Invalid commit hash format" in str(exc_info.value)
E   AssertionError: assert 'Invalid commit hash format' in 'Missing required field: hash'
E    +  where 'Missing required field: hash' = str(ValueError('Missing required field: hash'))
E    +    where ValueError('Missing required field: hash') = &lt;ExceptionInfo ValueError('Missing required field: hash') tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_timestamp[invalid-date]" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_timestamp[2023-13-01T12:00:00+00:00]" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_timestamp[2023-01-32T12:00:00+00:00]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_timestamp[]" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_validate_commit_data_invalid_timestamp[None]" time="0.003"><failure message="AssertionError: assert 'Invalid timestamp format' in 'Missing required field: timestamp'&#10; +  where 'Missing required field: timestamp' = str(ValueError('Missing required field: timestamp'))&#10; +    where ValueError('Missing required field: timestamp') = &lt;ExceptionInfo ValueError('Missing required field: timestamp') tblen=2&gt;.value">tests\unit\test_commit_tracker.py:331: in test_validate_commit_data_invalid_timestamp
    assert "Invalid timestamp format" in str(exc_info.value)
E   AssertionError: assert 'Invalid timestamp format' in 'Missing required field: timestamp'
E    +  where 'Missing required field: timestamp' = str(ValueError('Missing required field: timestamp'))
E    +    where ValueError('Missing required field: timestamp') = &lt;ExceptionInfo ValueError('Missing required field: timestamp') tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_get_repository_info_success" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_get_repository_info_no_git_repository" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTracker" name="test_get_repository_info_error" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestGitRepositoryError" name="test_git_repository_error_initialization" time="0.001" /><testcase classname="tests.unit.test_commit_tracker.TestGitRepositoryError" name="test_git_repository_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_commit_tracker.TestCommitExtractionError" name="test_commit_extraction_error_initialization" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitExtractionError" name="test_commit_extraction_error_inheritance" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_full_commit_logging_workflow" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_commit_by_hash_variations[abc123def456-True]" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_commit_by_hash_variations[def456ghi789-True]" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_commit_by_hash_variations[invalid-hash-False]" time="0.005" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_commit_by_hash_variations[-False]" time="0.004" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_timestamp_validation_formats[2023-01-01T12:00:00+00:00]" time="0.002"><failure message="AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'">tests\unit\test_commit_tracker.py:549: in test_timestamp_validation_formats
    self.commit_tracker._validate_commit_data(commit_data)
    ^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_timestamp_validation_formats[2023-01-01T12:00:00Z]" time="0.002"><failure message="AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'">tests\unit\test_commit_tracker.py:549: in test_timestamp_validation_formats
    self.commit_tracker._validate_commit_data(commit_data)
    ^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_timestamp_validation_formats[2023-01-01T12:00:00-05:00]" time="0.002"><failure message="AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'">tests\unit\test_commit_tracker.py:549: in test_timestamp_validation_formats
    self.commit_tracker._validate_commit_data(commit_data)
    ^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TestCommitTrackerIntegration' object has no attribute 'commit_tracker'</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerIntegration" name="test_commit_tracker_with_real_path" time="0.003"><failure message="assert False&#10; +  where False = isinstance(&lt;services.commit_tracker_service.src.git_parser.GitParser object at 0x00000175C71BCD10&gt;, MagicMock)&#10; +    where &lt;services.commit_tracker_service.src.git_parser.GitParser object at 0x00000175C71BCD10&gt; = &lt;services.commit_tracker_service.src.commit_tracker.CommitTracker object at 0x00000175C71BCD70&gt;.git_parser">tests\unit\test_commit_tracker.py:555: in test_commit_tracker_with_real_path
    assert isinstance(tracker.git_parser, MagicMock)  # Mocked in tests
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert False
E    +  where False = isinstance(&lt;services.commit_tracker_service.src.git_parser.GitParser object at 0x00000175C71BCD10&gt;, MagicMock)
E    +    where &lt;services.commit_tracker_service.src.git_parser.GitParser object at 0x00000175C71BCD10&gt; = &lt;services.commit_tracker_service.src.commit_tracker.CommitTracker object at 0x00000175C71BCD70&gt;.git_parser</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerEdgeCases" name="test_commit_tracker_empty_path" time="0.003"><failure message="AssertionError: assert WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent') == WindowsPath('.')&#10; +  where WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent') = &lt;services.commit_tracker_service.src.commit_tracker.CommitTracker object at 0x00000175C6EB0530&gt;.repo_path&#10; +  and   WindowsPath('.') = Path('')">tests\unit\test_commit_tracker.py:565: in test_commit_tracker_empty_path
    assert tracker.repo_path == Path("")
E   AssertionError: assert WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent') == WindowsPath('.')
E    +  where WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent') = &lt;services.commit_tracker_service.src.commit_tracker.CommitTracker object at 0x00000175C6EB0530&gt;.repo_path
E    +  and   WindowsPath('.') = Path('')</failure></testcase><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerEdgeCases" name="test_commit_tracker_none_path" time="0.003" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerEdgeCases" name="test_commit_tracker_relative_path" time="0.002" /><testcase classname="tests.unit.test_commit_tracker.TestCommitTrackerEdgeCases" name="test_validate_commit_data_edge_cases" time="0.002"><failure message="AttributeError: 'TestCommitTrackerEdgeCases' object has no attribute 'commit_tracker'">tests\unit\test_commit_tracker.py:594: in test_validate_commit_data_edge_cases
    self.commit_tracker._validate_commit_data(minimal_data)
    ^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TestCommitTrackerEdgeCases' object has no attribute 'commit_tracker'</failure></testcase><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_formatting" time="0.003"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF8FF0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FF8FF0&gt; = 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.'.startswith&#10; +      where 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.' = &lt;built-in method strip of str object at 0x00000175C6E59E70&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E59E70&gt; = '\nCommit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.\n'.strip">tests\unit\test_commit_tracker_service_init.py:48: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF8FF0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FF8FF0&gt; = 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.'.startswith
E    +      where 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.' = &lt;built-in method strip of str object at 0x00000175C6E59E70&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E59E70&gt; = '\nCommit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.\n'.strip</failure></testcase><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_structure" time="0.003" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_import_performance" time="0.003" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_multiple_imports_behavior" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_initialization_completeness" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_content_accuracy" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_metadata_consistency" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_module_attributes_existence" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_import_path" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_initialization_robustness" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_completeness" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_import_consistency" time="0.003" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_quality" time="0.003"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6E24EA0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6E24EA0&gt; = 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.'.startswith&#10; +      where 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.' = &lt;built-in method strip of str object at 0x00000175C6E59D10&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E59D10&gt; = '\nCommit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.\n'.strip">tests\unit\test_commit_tracker_service_init.py:203: in test_docstring_quality
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6E24EA0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6E24EA0&gt; = 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.'.startswith
E    +      where 'Commit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.' = &lt;built-in method strip of str object at 0x00000175C6E59D10&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E59D10&gt; = '\nCommit Tracker Service - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains the commit tracking microservice.\n'.strip</failure></testcase><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_naming_convention" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_accuracy" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_initialization_cleanliness" time="0.003"><failure message="AssertionError: assert 7 == 0&#10; +  where 7 = len(['GitCommandError', 'DataWriter', 'git_parser', 'commit_tracker', 'data_writer', 'GitParser', ...])">tests\unit\test_commit_tracker_service_init.py:239: in test_package_initialization_cleanliness
    assert len(unexpected_public) == 0
E   AssertionError: assert 7 == 0
E    +  where 7 = len(['GitCommandError', 'DataWriter', 'git_parser', 'commit_tracker', 'data_writer', 'GitParser', ...])</failure></testcase><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_consistency_with_project" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_package_import_reliability" time="0.002" /><testcase classname="tests.unit.test_commit_tracker_service_init.TestCommitTrackerServiceInit" name="test_docstring_maintainability" time="0.003" /><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_loads_from_default_path" time="0.020"><failure message="AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'">tests\unit\test_config_manager.py:38: in test_get_config_loads_from_default_path
    with patch('shared.config.config_manager.DEFAULT_CONFIG_PATH', config_file):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_with_custom_path" time="0.007"><failure message="AssertionError: assert {} == {'app': {'nam...bled': True}}}&#10;  &#10;  Right contains 4 more items:&#10;  {'app': {'name': 'CraftNudge AI Agent', 'version': '1.0.0'},&#10;   'data_store': {'base_path': './data'},&#10;   'logging': {'file': 'logs/app.log', 'level': 'INFO'},&#10;   'services': {'commit_tracker': {'batch_size': 100, 'enabled': True}}}&#10;  ...&#10;  &#10;  ...Full output truncated (21 lines hidden), use '-vv' to show">tests\unit\test_config_manager.py:51: in test_get_config_with_custom_path
    assert result == sample_config
E   AssertionError: assert {} == {'app': {'nam...bled': True}}}
E     
E     Right contains 4 more items:
E     {'app': {'name': 'CraftNudge AI Agent', 'version': '1.0.0'},
E      'data_store': {'base_path': './data'},
E      'logging': {'file': 'logs/app.log', 'level': 'INFO'},
E      'services': {'commit_tracker': {'batch_size': 100, 'enabled': True}}}
E     ...
E     
E     ...Full output truncated (21 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_creates_default_when_missing" time="0.003"><failure message="AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'">tests\unit\test_config_manager.py:57: in test_get_config_creates_default_when_missing
    with patch('shared.config.config_manager.DEFAULT_CONFIG_PATH', config_file):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_caches_result" time="0.005"><failure message="AssertionError: assert {} == {'app': {'nam...bled': True}}}&#10;  &#10;  Right contains 4 more items:&#10;  {'app': {'name': 'CraftNudge AI Agent', 'version': '1.0.0'},&#10;   'data_store': {'base_path': './data'},&#10;   'logging': {'file': 'logs/app.log', 'level': 'INFO'},&#10;   'services': {'commit_tracker': {'batch_size': 100, 'enabled': True}}}&#10;  ...&#10;  &#10;  ...Full output truncated (21 lines hidden), use '-vv' to show">tests\unit\test_config_manager.py:76: in test_get_config_caches_result
    assert result1 == result2 == sample_config
E   AssertionError: assert {} == {'app': {'nam...bled': True}}}
E     
E     Right contains 4 more items:
E     {'app': {'name': 'CraftNudge AI Agent', 'version': '1.0.0'},
E      'data_store': {'base_path': './data'},
E      'logging': {'file': 'logs/app.log', 'level': 'INFO'},
E      'services': {'commit_tracker': {'batch_size': 100, 'enabled': True}}}
E     ...
E     
E     ...Full output truncated (21 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_handles_load_error" time="0.004"><failure message="AssertionError: assert {} == {'default': 'config'}&#10;  &#10;  Right contains 1 more item:&#10;  {'default': 'config'}&#10;  &#10;  Full diff:&#10;  + {}&#10;  - {&#10;  -     'default': 'config',&#10;  - }">tests\unit\test_config_manager.py:87: in test_get_config_handles_load_error
    assert result == {"default": "config"}
E   AssertionError: assert {} == {'default': 'config'}
E     
E     Right contains 1 more item:
E     {'default': 'config'}
E     
E     Full diff:
E     + {}
E     - {
E     -     'default': 'config',
E     - }</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfig" name="test_get_config_handles_validation_error" time="0.004"><failure message="AssertionError: assert {} == {'default': 'config'}&#10;  &#10;  Right contains 1 more item:&#10;  {'default': 'config'}&#10;  &#10;  Full diff:&#10;  + {}&#10;  - {&#10;  -     'default': 'config',&#10;  - }">tests\unit\test_config_manager.py:101: in test_get_config_handles_validation_error
    assert result == {"default": "config"}
E   AssertionError: assert {} == {'default': 'config'}
E     
E     Right contains 1 more item:
E     {'default': 'config'}
E     
E     Full diff:
E     + {}
E     - {
E     -     'default': 'config',
E     - }</failure></testcase><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_valid_yaml" time="0.014" /><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_invalid_yaml" time="0.012"><failure message="shared.utils.error_handler.ConfigurationError: Invalid YAML in configuration file: mapping values are not allowed here&#10;  in &quot;C:\Users\MOHAMMAD ASIF\AppData\Local\Temp\pytest-of-MOHAMMAD ASIF\pytest-0\test_load_config_file_invalid_0\invalid_config.yaml&quot;, line 1, column 14">shared\config\config_manager.py:76: in load_config_file
    config = yaml.safe_load(file)
             ^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\__init__.py:125: in safe_load
    return load(stream, SafeLoader)
           ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\__init__.py:81: in load
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\constructor.py:49: in get_single_data
    node = self.get_single_node()
           ^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\composer.py:36: in get_single_node
    document = self.compose_document()
               ^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\composer.py:55: in compose_document
    node = self.compose_node(None, None)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\composer.py:84: in compose_node
    node = self.compose_mapping_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\composer.py:127: in compose_mapping_node
    while not self.check_event(MappingEndEvent):
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\parser.py:98: in check_event
    self.current_event = self.state()
                         ^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\parser.py:428: in parse_block_mapping_key
    if self.check_token(KeyToken):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\scanner.py:116: in check_token
    self.fetch_more_tokens()
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\scanner.py:223: in fetch_more_tokens
    return self.fetch_value()
           ^^^^^^^^^^^^^^^^^^
C:\Users\MOHAMMAD ASIF\AppData\Roaming\Python\Python313\site-packages\yaml\scanner.py:577: in fetch_value
    raise ScannerError(None, None,
E   yaml.scanner.ScannerError: mapping values are not allowed here
E     in "C:\Users\MOHAMMAD ASIF\AppData\Local\Temp\pytest-of-MOHAMMAD ASIF\pytest-0\test_load_config_file_invalid_0\invalid_config.yaml", line 1, column 14

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:122: in test_load_config_file_invalid_yaml
    load_config_file(str(config_file))
shared\config\config_manager.py:84: in load_config_file
    raise ConfigurationError(f"Invalid YAML in configuration file: {e}")
E   shared.utils.error_handler.ConfigurationError: Invalid YAML in configuration file: mapping values are not allowed here
E     in "C:\Users\MOHAMMAD ASIF\AppData\Local\Temp\pytest-of-MOHAMMAD ASIF\pytest-0\test_load_config_file_invalid_0\invalid_config.yaml", line 1, column 14</failure></testcase><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_not_dict" time="0.012"><failure message="shared.utils.error_handler.ConfigurationError: Failed to read configuration file: Configuration file must contain a dictionary">shared\config\config_manager.py:79: in load_config_file
    raise ConfigurationError("Configuration file must contain a dictionary")
E   shared.utils.error_handler.ConfigurationError: Configuration file must contain a dictionary

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:130: in test_load_config_file_not_dict
    load_config_file(str(config_file))
shared\config\config_manager.py:86: in load_config_file
    raise ConfigurationError(f"Failed to read configuration file: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to read configuration file: Configuration file must contain a dictionary</failure></testcase><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_file_not_found" time="0.003"><failure message="shared.utils.error_handler.ConfigurationError: Failed to read configuration file: [Errno 2] No such file or directory: 'C:\\Users\\MOHAMMAD ASIF\\AppData\\Local\\Temp\\pytest-of-MOHAMMAD ASIF\\pytest-0\\test_load_config_file_file_not0\\nonexistent.yaml'">shared\config\config_manager.py:75: in load_config_file
    with open(config_path, 'r', encoding='utf-8') as file:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\MOHAMMAD ASIF\\AppData\\Local\\Temp\\pytest-of-MOHAMMAD ASIF\\pytest-0\\test_load_config_file_file_not0\\nonexistent.yaml'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:137: in test_load_config_file_file_not_found
    load_config_file(str(config_file))
shared\config\config_manager.py:86: in load_config_file
    raise ConfigurationError(f"Failed to read configuration file: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to read configuration file: [Errno 2] No such file or directory: 'C:\\Users\\MOHAMMAD ASIF\\AppData\\Local\\Temp\\pytest-of-MOHAMMAD ASIF\\pytest-0\\test_load_config_file_file_not0\\nonexistent.yaml'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_permission_error" time="0.011"><failure message="Failed: DID NOT RAISE &lt;class 'PermissionError'&gt;">tests\unit\test_config_manager.py:148: in test_load_config_file_permission_error
    with pytest.raises(PermissionError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'PermissionError'&gt;</failure></testcase><testcase classname="tests.unit.test_config_manager.TestLoadConfigFile" name="test_load_config_file_encoding_handling" time="0.012" /><testcase classname="tests.unit.test_config_manager.TestCreateDefaultConfig" name="test_create_default_config_creates_file" time="0.003"><failure message="shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'">shared\config\config_manager.py:167: in create_default_config
    config_path.parent.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'parent'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:170: in test_create_default_config_creates_file
    result = create_default_config(str(config_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:175: in create_default_config
    raise ConfigurationError(f"Failed to create default configuration: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestCreateDefaultConfig" name="test_create_default_config_creates_directory" time="0.003"><failure message="shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'">shared\config\config_manager.py:167: in create_default_config
    config_path.parent.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'parent'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:181: in test_create_default_config_creates_directory
    result = create_default_config(str(config_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:175: in create_default_config
    raise ConfigurationError(f"Failed to create default configuration: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestCreateDefaultConfig" name="test_create_default_config_handles_write_error" time="0.014"><failure message="shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'">shared\config\config_manager.py:167: in create_default_config
    config_path.parent.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'parent'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:194: in test_create_default_config_handles_write_error
    create_default_config(str(config_file))
shared\config\config_manager.py:175: in create_default_config
    raise ConfigurationError(f"Failed to create default configuration: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestCreateDefaultConfig" name="test_create_default_config_content_structure" time="0.003"><failure message="shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'">shared\config\config_manager.py:167: in create_default_config
    config_path.parent.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'parent'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:200: in test_create_default_config_content_structure
    result = create_default_config(str(config_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:175: in create_default_config
    raise ConfigurationError(f"Failed to create default configuration: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_config" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:230: in test_validate_config_valid_config
    validate_config(sample_config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_missing_required_section" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing required configuration section: services">tests\unit\test_config_manager.py:241: in test_validate_config_missing_required_section
    validate_config(config)
shared\config\config_manager.py:192: in validate_config
    raise ConfigurationError(f"Missing required configuration section: {section}")
E   shared.utils.error_handler.ConfigurationError: Missing required configuration section: services</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_section_not_dict" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Configuration section 'app' must be a dictionary">tests\unit\test_config_manager.py:253: in test_validate_config_section_not_dict
    validate_config(config)
shared\config\config_manager.py:195: in validate_config
    raise ConfigurationError(f"Configuration section '{section}' must be a dictionary")
E   shared.utils.error_handler.ConfigurationError: Configuration section 'app' must be a dictionary</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_missing_data_store_base_path" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: data_store.base_path is required">tests\unit\test_config_manager.py:265: in test_validate_config_missing_data_store_base_path
    validate_config(config)
shared\config\config_manager.py:200: in validate_config
    raise ConfigurationError("data_store.base_path is required")
E   shared.utils.error_handler.ConfigurationError: data_store.base_path is required</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_missing_required_service" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: commit_tracker">tests\unit\test_config_manager.py:277: in test_validate_config_missing_required_service
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: commit_tracker</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_service_not_dict" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Service configuration 'commit_tracker' must be a dictionary">tests\unit\test_config_manager.py:289: in test_validate_config_service_not_dict
    validate_config(config)
shared\config\config_manager.py:211: in validate_config
    raise ConfigurationError(f"Service configuration '{service}' must be a dictionary")
E   shared.utils.error_handler.ConfigurationError: Service configuration 'commit_tracker' must be a dictionary</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_missing_logging_level" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:301: in test_validate_config_missing_logging_level
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_invalid_logging_level[INVALID]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:314: in test_validate_config_invalid_logging_level
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_invalid_logging_level[DEBUGGING]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:314: in test_validate_config_invalid_logging_level
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_invalid_logging_level[TRACE]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:314: in test_validate_config_invalid_logging_level
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_invalid_logging_level[FATAL]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:314: in test_validate_config_invalid_logging_level
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_logging_levels[DEBUG]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:327: in test_validate_config_valid_logging_levels
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_logging_levels[INFO]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:327: in test_validate_config_valid_logging_levels
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_logging_levels[WARNING]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:327: in test_validate_config_valid_logging_levels
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_logging_levels[ERROR]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:327: in test_validate_config_valid_logging_levels
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestValidateConfig" name="test_validate_config_valid_logging_levels[CRITICAL]" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics">tests\unit\test_config_manager.py:327: in test_validate_config_valid_logging_levels
    validate_config(config)
shared\config\config_manager.py:208: in validate_config
    raise ConfigurationError(f"Missing service configuration: {service}")
E   shared.utils.error_handler.ConfigurationError: Missing service configuration: analytics</failure></testcase><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_simple_key" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_nested_key" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_key_not_found" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_with_default" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_intermediate_key_not_dict" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_various_paths[app.name-CraftNudge AI Agent]" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_various_paths[services.commit_tracker.enabled-True]" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_various_paths[logging.level-INFO]" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_various_paths[nonexistent.key-None]" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestGetConfigValue" name="test_get_config_value_various_paths[app.nonexistent-None]" time="0.002" /><testcase classname="tests.unit.test_config_manager.TestReloadConfig" name="test_reload_config_clears_cache" time="0.015"><failure message="AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'">tests\unit\test_config_manager.py:388: in test_reload_config_clears_cache
    with patch('shared.config.config_manager.DEFAULT_CONFIG_PATH', config_file):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'DEFAULT_CONFIG_PATH'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestUpdateConfig" name="test_update_config_simple_update" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing required configuration section: data_store">tests\unit\test_config_manager.py:406: in test_update_config_simple_update
    result = update_config(update)
             ^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:275: in update_config
    validate_config(_config_cache)
shared\config\config_manager.py:192: in validate_config
    raise ConfigurationError(f"Missing required configuration section: {section}")
E   shared.utils.error_handler.ConfigurationError: Missing required configuration section: data_store</failure></testcase><testcase classname="tests.unit.test_config_manager.TestUpdateConfig" name="test_update_config_loads_if_cache_empty" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Missing required configuration section: data_store">tests\unit\test_config_manager.py:416: in test_update_config_loads_if_cache_empty
    result = update_config(update)
             ^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:275: in update_config
    validate_config(_config_cache)
shared\config\config_manager.py:192: in validate_config
    raise ConfigurationError(f"Missing required configuration section: {section}")
E   shared.utils.error_handler.ConfigurationError: Missing required configuration section: data_store</failure></testcase><testcase classname="tests.unit.test_config_manager.TestUpdateConfig" name="test_update_config_handles_validation_error" time="0.002"><failure message="shared.utils.error_handler.ConfigurationError: Configuration section 'app' must be a dictionary">tests\unit\test_config_manager.py:425: in test_update_config_handles_validation_error
    update_config(invalid_update)
shared\config\config_manager.py:275: in update_config
    validate_config(_config_cache)
shared\config\config_manager.py:195: in validate_config
    raise ConfigurationError(f"Configuration section '{section}' must be a dictionary")
E   shared.utils.error_handler.ConfigurationError: Configuration section 'app' must be a dictionary</failure></testcase><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_simple_update" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_nested_update" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_deeply_nested" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_overwrites_non_dict" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_does_not_modify_original" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_empty_updates" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestDeepMerge" name="test_deep_merge_empty_base" time="0.001" /><testcase classname="tests.unit.test_config_manager.TestConfigManagerIntegration" name="test_full_config_lifecycle" time="0.004"><failure message="shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'">shared\config\config_manager.py:167: in create_default_config
    config_path.parent.mkdir(parents=True, exist_ok=True)
    ^^^^^^^^^^^^^^^^^^
E   AttributeError: 'str' object has no attribute 'parent'

During handling of the above exception, another exception occurred:
tests\unit\test_config_manager.py:507: in test_full_config_lifecycle
    default_config = create_default_config(str(config_file))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
shared\config\config_manager.py:175: in create_default_config
    raise ConfigurationError(f"Failed to create default configuration: {e}")
E   shared.utils.error_handler.ConfigurationError: Failed to create default configuration: 'str' object has no attribute 'parent'</failure></testcase><testcase classname="tests.unit.test_config_manager.TestConfigManagerIntegration" name="test_config_with_real_file" time="0.015"><failure message="AssertionError: assert {'analytics':...e, ...}}, ...} == {'app': {'nam...led': False}}}&#10;  &#10;  Differing items:&#10;  {'data_store': {'analytics': {'metrics_file': 'analytics/metrics.jsonl', 'trends_file': 'analytics/trends.jsonl'}, 'ba...'}, 'notifications': {'preferences_file': 'notifications/preferences.jsonl', 'sent_file': 'notifications/sent.jsonl'}}} != {'data_store': {'base_path': '/custom/data'}}&#10;  {'logging': {'file': {'enabled': True, 'max_size': '10MB', 'path': 'logs/craftnudge.log', 'retention': '30 days', ...}...: 'INFO', 'services': {'analytics': 'INFO', 'api_gateway': 'INFO', 'commit_tracker': 'INFO', 'notifications': 'INFO'}}} != {'logging': {'file': '/cust...&#10;  &#10;  ...Full output truncated (289 lines hidden), use '-vv' to show">tests\unit\test_config_manager.py:546: in test_config_with_real_file
    assert loaded_config == custom_config
E   AssertionError: assert {'analytics':...e, ...}}, ...} == {'app': {'nam...led': False}}}
E     
E     Differing items:
E     {'data_store': {'analytics': {'metrics_file': 'analytics/metrics.jsonl', 'trends_file': 'analytics/trends.jsonl'}, 'ba...'}, 'notifications': {'preferences_file': 'notifications/preferences.jsonl', 'sent_file': 'notifications/sent.jsonl'}}} != {'data_store': {'base_path': '/custom/data'}}
E     {'logging': {'file': {'enabled': True, 'max_size': '10MB', 'path': 'logs/craftnudge.log', 'retention': '30 days', ...}...: 'INFO', 'services': {'analytics': 'INFO', 'api_gateway': 'INFO', 'commit_tracker': 'INFO', 'notifications': 'INFO'}}} != {'logging': {'file': '/cust...
E     
E     ...Full output truncated (289 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_init_with_default_path" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_init_with_custom_path" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_init_with_string_path" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_valid_commit_data" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[id]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[hash]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[author]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[message]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[timestamp]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_missing_required_field[changed_files]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_none_field" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_id[invalid-uuid]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_id[12345678-1234-1234-1234-123456789ab]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_id[12345678-1234-1234-1234-123456789abcd]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_id[]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_id[None]" time="0.002"><failure message="AssertionError: assert 'Invalid ID format' in 'Field id cannot be None'&#10; +  where 'Field id cannot be None' = str(ValueError('Field id cannot be None'))&#10; +    where ValueError('Field id cannot be None') = &lt;ExceptionInfo ValueError('Field id cannot be None') tblen=2&gt;.value">tests\unit\test_data_writer.py:172: in test_validate_commit_data_invalid_id
    assert "Invalid ID format" in str(exc_info.value)
E   AssertionError: assert 'Invalid ID format' in 'Field id cannot be None'
E    +  where 'Field id cannot be None' = str(ValueError('Field id cannot be None'))
E    +    where ValueError('Field id cannot be None') = &lt;ExceptionInfo ValueError('Field id cannot be None') tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_hash[abc]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_hash[]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_hash[None]" time="0.002"><failure message="AssertionError: assert 'Invalid commit hash format' in 'Field hash cannot be None'&#10; +  where 'Field hash cannot be None' = str(ValueError('Field hash cannot be None'))&#10; +    where ValueError('Field hash cannot be None') = &lt;ExceptionInfo ValueError('Field hash cannot be None') tblen=2&gt;.value">tests\unit\test_data_writer.py:200: in test_validate_commit_data_invalid_hash
    assert "Invalid commit hash format" in str(exc_info.value)
E   AssertionError: assert 'Invalid commit hash format' in 'Field hash cannot be None'
E    +  where 'Field hash cannot be None' = str(ValueError('Field hash cannot be None'))
E    +    where ValueError('Field hash cannot be None') = &lt;ExceptionInfo ValueError('Field hash cannot be None') tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_hash[123]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_timestamp[invalid-date]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_timestamp[2023-13-01T12:00:00+00:00]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_timestamp[2023-01-32T12:00:00+00:00]" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_timestamp[]" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_timestamp[None]" time="0.002"><failure message="AssertionError: assert 'Invalid timestamp format' in 'Field timestamp cannot be None'&#10; +  where 'Field timestamp cannot be None' = str(ValueError('Field timestamp cannot be None'))&#10; +    where ValueError('Field timestamp cannot be None') = &lt;ExceptionInfo ValueError('Field timestamp cannot be None') tblen=2&gt;.value">tests\unit\test_data_writer.py:229: in test_validate_commit_data_invalid_timestamp
    assert "Invalid timestamp format" in str(exc_info.value)
E   AssertionError: assert 'Invalid timestamp format' in 'Field timestamp cannot be None'
E    +  where 'Field timestamp cannot be None' = str(ValueError('Field timestamp cannot be None'))
E    +    where ValueError('Field timestamp cannot be None') = &lt;ExceptionInfo ValueError('Field timestamp cannot be None') tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_validate_commit_data_invalid_changed_files" time="0.002" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_write_commit_success" time="0.023" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_write_commit_validation_error" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_read_commits_success" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_read_commits_file_not_exists" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_read_commits_with_limit" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_get_commit_count_success" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_get_commit_count_file_not_exists" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_author_match" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_message_match" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_date_range" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_files_match" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_multiple_criteria" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_search_commits_file_not_exists" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_ensure_data_store_exists_success" time="0.003"><failure message="AssertionError: Expected 'mkdir' to be called once. Called 0 times.">tests\unit\test_data_writer.py:602: in test_ensure_data_store_exists_success
    mock_mkdir.assert_called_once_with(parents=True, exist_ok=True)
C:\Python313\Lib\unittest\mock.py:990: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'mkdir' to be called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_ensure_data_store_exists_error" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'Exception'&gt;">tests\unit\test_data_writer.py:616: in test_ensure_data_store_exists_error
    with pytest.raises(Exception) as exc_info:
         ^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'Exception'&gt;</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_ensure_commits_file_exists_create" time="0.004" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_ensure_commits_file_exists_already_exists" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriter" name="test_ensure_commits_file_exists_error" time="0.003" /><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_full_data_lifecycle" time="0.015" /><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_search_criteria_combinations[search_criteria0-2]" time="0.017" /><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_search_criteria_combinations[search_criteria1-2]" time="0.007" /><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_search_criteria_combinations[search_criteria2-1]" time="0.007" /><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_search_criteria_combinations[search_criteria3-1]" time="0.007"><failure message="AssertionError: assert 2 == 1&#10; +  where 2 = len([{'author': 'John Smith', 'author_email': 'johnsmith@example.com', 'body': 'Test body', 'changed_files': ['src/bug.py'], ...}, {'author': 'John Doe', 'author_email': 'john@example.com', 'body': 'Test body', 'changed_files': ['src/auth.py', 'src/main.py'], ...}])">tests\unit\test_data_writer.py:781: in test_search_criteria_combinations
    assert len(result['commits']) == expected_matches
E   AssertionError: assert 2 == 1
E    +  where 2 = len([{'author': 'John Smith', 'author_email': 'johnsmith@example.com', 'body': 'Test body', 'changed_files': ['src/bug.py'], ...}, {'author': 'John Doe', 'author_email': 'john@example.com', 'body': 'Test body', 'changed_files': ['src/auth.py', 'src/main.py'], ...}])</failure></testcase><testcase classname="tests.unit.test_data_writer.TestDataWriterIntegration" name="test_search_criteria_combinations[search_criteria4-0]" time="0.008" /><testcase classname="tests.unit.test_error_handler.TestCraftNudgeError" name="test_craft_nudge_error_initialization" time="0.002"><failure message="AssertionError: assert {} is None&#10; +  where {} = CraftNudgeError('Test error message').details">tests\unit\test_error_handler.py:39: in test_craft_nudge_error_initialization
    assert error.details is None
E   AssertionError: assert {} is None
E    +  where {} = CraftNudgeError('Test error message').details</failure></testcase><testcase classname="tests.unit.test_error_handler.TestCraftNudgeError" name="test_craft_nudge_error_default_parameters" time="0.002"><failure message="TypeError: CraftNudgeError.__init__() missing 1 required positional argument: 'message'">tests\unit\test_error_handler.py:44: in test_craft_nudge_error_default_parameters
    error = CraftNudgeError()
            ^^^^^^^^^^^^^^^^^
E   TypeError: CraftNudgeError.__init__() missing 1 required positional argument: 'message'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestCraftNudgeError" name="test_craft_nudge_error_timestamp_format" time="0.002"><failure message="AssertionError: assert False&#10; +  where False = isinstance('2025-08-17T06:16:45.606682+00:00', datetime)&#10; +    where '2025-08-17T06:16:45.606682+00:00' = CraftNudgeError('Test').timestamp">tests\unit\test_error_handler.py:53: in test_craft_nudge_error_timestamp_format
    assert isinstance(error.timestamp, datetime)
E   AssertionError: assert False
E    +  where False = isinstance('2025-08-17T06:16:45.606682+00:00', datetime)
E    +    where '2025-08-17T06:16:45.606682+00:00' = CraftNudgeError('Test').timestamp</failure></testcase><testcase classname="tests.unit.test_error_handler.TestCraftNudgeError" name="test_craft_nudge_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestCraftNudgeError" name="test_craft_nudge_error_str_representation" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestSpecificErrors" name="test_git_repository_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestSpecificErrors" name="test_data_store_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestSpecificErrors" name="test_validation_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestSpecificErrors" name="test_configuration_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestSpecificErrors" name="test_specific_errors_with_details" time="0.001" /><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_basic_exception" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:117: in test_handle_error_basic_exception
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_with_error_code" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:127: in test_handle_error_with_error_code
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_with_details" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:138: in test_handle_error_with_details
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_craft_nudge_error" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:147: in test_handle_error_craft_nudge_error
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_timestamp_format" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:157: in test_handle_error_timestamp_format
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestHandleError" name="test_handle_error_traceback_included" time="0.002"><failure message="TypeError: handle_error() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:167: in test_handle_error_traceback_included
    result = handle_error(exception)
             ^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: handle_error() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_success" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:182: in test_validate_required_fields_success
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_missing_field" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:190: in test_validate_required_fields_missing_field
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_none_value" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:200: in test_validate_required_fields_none_value
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_empty_data" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:210: in test_validate_required_fields_empty_data
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_empty_required_list" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:220: in test_validate_required_fields_empty_required_list
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateRequiredFields" name="test_validate_required_fields_context_in_error" time="0.002"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:228: in test_validate_required_fields_context_in_error
    validate_required_fields(data, required_fields)
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_success" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:242: in test_validate_field_type_success
    validate_field_type(data, "name", str)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_missing_field" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:251: in test_validate_field_type_missing_field
    validate_field_type(data, "missing_field", str)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_wrong_type" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:260: in test_validate_field_type_wrong_type
    validate_field_type(data, "value", int)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_complex_types" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:272: in test_validate_field_type_complex_types
    validate_field_type(data, "list_field", list)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_none_value" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:281: in test_validate_field_type_none_value
    validate_field_type(data, "name", str)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestValidateFieldType" name="test_validate_field_type_context_in_error" time="0.002"><failure message="TypeError: validate_field_type() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:290: in test_validate_field_type_context_in_error
    validate_field_type(data, "value", int)
E   TypeError: validate_field_type() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestSafeExecute" name="test_safe_execute_success" time="0.003"><failure message="AssertionError: assert {'result': 'success', 'status': 'success'} == 'success'">tests\unit\test_error_handler.py:307: in test_safe_execute_success
    assert result == "success"
E   AssertionError: assert {'result': 'success', 'status': 'success'} == 'success'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestSafeExecute" name="test_safe_execute_with_kwargs" time="0.003"><failure message="AssertionError: assert {'result': 'test: 123', 'status': 'success'} == 'test: 123'">tests\unit\test_error_handler.py:317: in test_safe_execute_with_kwargs
    assert result == "test: 123"
E   AssertionError: assert {'result': 'test: 123', 'status': 'success'} == 'test: 123'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestSafeExecute" name="test_safe_execute_function_failure" time="0.004"><failure message="AssertionError: assert {'context': 'safe_execute(test_func)', 'error': 'Test error', 'error_type': 'ValueError', 'status': 'error', ...} is None">tests\unit\test_error_handler.py:327: in test_safe_execute_function_failure
    assert result is None
E   AssertionError: assert {'context': 'safe_execute(test_func)', 'error': 'Test error', 'error_type': 'ValueError', 'status': 'error', ...} is None</failure></testcase><testcase classname="tests.unit.test_error_handler.TestSafeExecute" name="test_safe_execute_with_complex_return_value" time="0.003"><failure message="AssertionError: assert {'result': {'...s': 'success'} == {'data': [1, ...s': 'success'}&#10;  &#10;  Omitting 1 identical items, use -vv to show&#10;  Left contains 1 more item:&#10;  {'result': {'data': [1, 2, 3], 'status': 'success'}}&#10;  Right contains 1 more item:&#10;  {'data': [1, 2, 3]}&#10;  ...&#10;  &#10;  ...Full output truncated (22 lines hidden), use '-vv' to show">tests\unit\test_error_handler.py:337: in test_safe_execute_with_complex_return_value
    assert result == {"status": "success", "data": [1, 2, 3]}
E   AssertionError: assert {'result': {'...s': 'success'} == {'data': [1, ...s': 'success'}
E     
E     Omitting 1 identical items, use -vv to show
E     Left contains 1 more item:
E     {'result': {'data': [1, 2, 3], 'status': 'success'}}
E     Right contains 1 more item:
E     {'data': [1, 2, 3]}
E     ...
E     
E     ...Full output truncated (22 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_error_handler.TestSafeExecute" name="test_safe_execute_function_name_in_context" time="0.003"><failure message="AssertionError: Expected 'error' to have been called.">tests\unit\test_error_handler.py:347: in test_safe_execute_function_name_in_context
    mock_logger.error.assert_called()
C:\Python313\Lib\unittest\mock.py:948: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'error' to have been called.</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_success_first_attempt" time="0.003"><failure message="AssertionError: assert {'attempts': 1, 'result': 'success', 'status': 'success'} == 'success'">tests\unit\test_error_handler.py:363: in test_retry_on_error_success_first_attempt
    assert result == "success"
E   AssertionError: assert {'attempts': 1, 'result': 'success', 'status': 'success'} == 'success'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_success_after_retries" time="0.305"><failure message="AssertionError: assert {'attempts': 3, 'result': 'success', 'status': 'success'} == 'success'">tests\unit\test_error_handler.py:379: in test_retry_on_error_success_after_retries
    assert result == "success"
E   AssertionError: assert {'attempts': 3, 'result': 'success', 'status': 'success'} == 'success'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_all_attempts_fail" time="0.707"><failure message="AssertionError: assert {'context': 'retry_on_error(test_func)', 'details': {'attempts': 4, 'max_retries': 3}, 'error': 'Persistent error', 'error_code': 'MAX_RETRIES_EXCEEDED', ...} is None">tests\unit\test_error_handler.py:389: in test_retry_on_error_all_attempts_fail
    assert result is None
E   AssertionError: assert {'context': 'retry_on_error(test_func)', 'details': {'attempts': 4, 'max_retries': 3}, 'error': 'Persistent error', 'error_code': 'MAX_RETRIES_EXCEEDED', ...} is None</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_custom_parameters" time="0.104"><failure message="AssertionError: assert {'attempts': 2, 'result': 'success', 'status': 'success'} == 'success'">tests\unit\test_error_handler.py:405: in test_retry_on_error_custom_parameters
    assert result == "success"
E   AssertionError: assert {'attempts': 2, 'result': 'success', 'status': 'success'} == 'success'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_with_args_kwargs" time="0.002"><failure message="TypeError: can only concatenate str (not &quot;int&quot;) to str">tests\unit\test_error_handler.py:414: in test_retry_on_error_with_args_kwargs
    result = retry_on_error(test_func, "test", value=123)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
shared\utils\error_handler.py:197: in retry_on_error
    for attempt in range(max_retries + 1):
                         ^^^^^^^^^^^^^^^
E   TypeError: can only concatenate str (not "int") to str</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_logging" time="0.306"><failure message="AssertionError: Expected 'error' to have been called.">tests\unit\test_error_handler.py:425: in test_retry_on_error_logging
    mock_logger.error.assert_called()
C:\Python313\Lib\unittest\mock.py:948: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'error' to have been called.</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_zero_retries" time="0.003"><failure message="AssertionError: assert {'context': 'retry_on_error(test_func)', 'details': {'attempts': 1, 'max_retries': 0}, 'error': 'Test error', 'error_code': 'MAX_RETRIES_EXCEEDED', ...} is None">tests\unit\test_error_handler.py:434: in test_retry_on_error_zero_retries
    assert result is None
E   AssertionError: assert {'context': 'retry_on_error(test_func)', 'details': {'attempts': 1, 'max_retries': 0}, 'error': 'Test error', 'error_code': 'MAX_RETRIES_EXCEEDED', ...} is None</failure></testcase><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_attempt_counting[0-1]" time="0.003" /><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_attempt_counting[1-2]" time="0.104" /><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_attempt_counting[2-3]" time="0.307" /><testcase classname="tests.unit.test_error_handler.TestRetryOnError" name="test_retry_on_error_attempt_counting[5-6]" time="3.109" /><testcase classname="tests.unit.test_error_handler.TestErrorHandlerIntegration" name="test_error_chain_with_validation" time="0.004"><failure message="TypeError: validate_required_fields() missing 1 required positional argument: 'context'">tests\unit\test_error_handler.py:463: in test_error_chain_with_validation
    validate_required_fields(data, ["name"])
E   TypeError: validate_required_fields() missing 1 required positional argument: 'context'</failure></testcase><testcase classname="tests.unit.test_error_handler.TestErrorHandlerIntegration" name="test_safe_execute_with_validation" time="0.003"><failure message="assert {'context': 'safe_execute(validate_data)', 'error': &quot;validate_required_fields() missing 1 required positional argument: 'context'&quot;, 'error_type': 'TypeError', 'status': 'error', ...} is True">tests\unit\test_error_handler.py:478: in test_safe_execute_with_validation
    assert result is True
E   assert {'context': 'safe_execute(validate_data)', 'error': "validate_required_fields() missing 1 required positional argument: 'context'", 'error_type': 'TypeError', 'status': 'error', ...} is True</failure></testcase><testcase classname="tests.unit.test_error_handler.TestErrorHandlerIntegration" name="test_retry_on_error_with_safe_execute" time="0.307"><failure message="AssertionError: assert {'attempts': 3, 'result': 'success', 'status': 'success'} == 'success'">tests\unit\test_error_handler.py:497: in test_retry_on_error_with_safe_execute
    assert result == "success"
E   AssertionError: assert {'attempts': 3, 'result': 'success', 'status': 'success'} == 'success'</failure></testcase><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_formatting" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C7089CB0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C7089CB0&gt; = 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.'.startswith&#10; +      where 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.' = &lt;built-in method strip of str object at 0x00000175C6E530F0&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E530F0&gt; = '\nExamples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.\n'.strip">tests\unit\test_examples_init.py:48: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C7089CB0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C7089CB0&gt; = 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.'.startswith
E    +      where 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.' = &lt;built-in method strip of str object at 0x00000175C6E530F0&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E530F0&gt; = '\nExamples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.\n'.strip</failure></testcase><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_structure" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_import_performance" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_multiple_imports_behavior" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_initialization_completeness" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_content_accuracy" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_metadata_consistency" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_module_attributes_existence" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_import_path" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_initialization_robustness" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_completeness" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_import_consistency" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_quality" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C7089DE0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C7089DE0&gt; = 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.'.startswith&#10; +      where 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.' = &lt;built-in method strip of str object at 0x00000175C6E52AB0&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E52AB0&gt; = '\nExamples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.\n'.strip">tests\unit\test_examples_init.py:203: in test_docstring_quality
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C7089DE0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C7089DE0&gt; = 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.'.startswith
E    +      where 'Examples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.' = &lt;built-in method strip of str object at 0x00000175C6E52AB0&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E52AB0&gt; = '\nExamples - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains usage examples and demonstrations.\n'.strip</failure></testcase><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_naming_convention" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_accuracy" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_initialization_cleanliness" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_consistency_with_project" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_import_reliability" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_maintainability" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_purpose_clarity" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_brevity_and_clarity" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_import_simplicity" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_docstring_consistency_across_imports" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_examples_specific_terminology" time="0.004" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_educational_purpose" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_learning_focus" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_documentation_consistency" time="0.002" /><testcase classname="tests.unit.test_examples_init.TestExamplesInit" name="test_package_import_simplicity_for_learning" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_init" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_init_with_string_path" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:33: in test_init_with_string_path
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_is_git_repository_true" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_is_git_repository_false_not_exists" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_is_git_repository_false_not_dir" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_is_git_repository_handles_exception" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_latest_commit_success" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_latest_commit_git_command_error" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_by_hash_success" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_by_hash_commit_not_found" time="0.004"><failure message="assert 'Commit nonexistent not found' in &quot;Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;&quot;&#10; +  where &quot;Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;&quot; = str(GitCommandError(&quot;Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;&quot;))&#10; +    where GitCommandError(&quot;Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;&quot;) = &lt;ExceptionInfo GitCommandError(&quot;Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;&quot;) tblen=2&gt;.value">tests\unit\test_git_parser.py:199: in test_get_commit_by_hash_commit_not_found
    assert f"Commit {commit_hash} not found" in str(exc_info.value)
E   assert 'Commit nonexistent not found' in "Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;"
E    +  where "Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;" = str(GitCommandError("Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;"))
E    +    where GitCommandError("Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;") = &lt;ExceptionInfo GitCommandError("Failed to extract commit nonexistent: &lt;MagicMock name='handle_error().__getitem__()' id='1605361130800'&gt;") tblen=2&gt;.value</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_repository_info_success" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_repository_info_handles_error" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_metadata_success" time="0.023" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_metadata_no_body" time="0.008" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_metadata_invalid_date_format" time="0.007" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_changed_files_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_changed_files_empty_output" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_changed_files_handles_error" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_stats_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_stats_no_stats_line" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_commit_stats_handles_error" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_run_git_command_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_run_git_command_called_process_error" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_run_git_command_file_not_found" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_commit_exists_true" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_commit_exists_false" time="0.003" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_remote_url_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_remote_url_failure" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_current_branch_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_current_branch_failure" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_total_commits_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_total_commits_failure" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_total_commits_invalid_output" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_last_commit_date_success" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitParser" name="test_get_last_commit_date_failure" time="0.002" /><testcase classname="tests.unit.test_git_parser.TestGitCommandError" name="test_git_command_error_initialization" time="0.001" /><testcase classname="tests.unit.test_git_parser.TestGitCommandError" name="test_git_command_error_inheritance" time="0.001" /><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_full_commit_extraction_workflow" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:588: in test_full_commit_extraction_workflow
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_existence_checking[abc123def456-True]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:613: in test_commit_existence_checking
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_existence_checking[nonexistent-False]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:613: in test_commit_existence_checking
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_existence_checking[-False]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:613: in test_commit_existence_checking
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_existence_checking[invalid-hash-False]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:613: in test_commit_existence_checking
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_stats_parsing[ 2 files changed, 10 insertions(+), 5 deletions(-)-expected_stats0]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:630: in test_commit_stats_parsing
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_stats_parsing[ 1 file changed, 3 insertions(+)-expected_stats1]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:630: in test_commit_stats_parsing
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_stats_parsing[ 5 files changed, 0 insertions(+), 0 deletions(-)-expected_stats2]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:630: in test_commit_stats_parsing
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_stats_parsing[-expected_stats3]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:630: in test_commit_stats_parsing
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_git_parser.TestGitParserIntegration" name="test_commit_stats_parsing[No stats line-expected_stats4]" time="0.002"><failure message="TypeError: unsupported operand type(s) for /: 'str' and 'str'">tests\unit\test_git_parser.py:630: in test_commit_stats_parsing
    git_parser = GitParser("/test/repo")
                 ^^^^^^^^^^^^^^^^^^^^^^^
services\commit_tracker_service\src\git_parser.py:39: in __init__
    self.git_dir = repo_path / '.git'
                   ^^^^^^^^^^^^^^^^^^
E   TypeError: unsupported operand type(s) for /: 'str' and 'str'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_default_parameters" time="0.003"><failure message="AssertionError: Expected 'remove' to have been called.">tests\unit\test_logger.py:27: in test_setup_logger_default_parameters
    mock_logger.remove.assert_called()
C:\Python313\Lib\unittest\mock.py:948: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'remove' to have been called.</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_custom_level" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:33: in test_setup_logger_custom_level
    setup_logger(level="DEBUG")
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_with_file" time="0.014"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'file'">tests\unit\test_logger.py:41: in test_setup_logger_with_file
    setup_logger(file=str(log_file))
E   TypeError: setup_logger() got an unexpected keyword argument 'file'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_custom_format" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'format'">tests\unit\test_logger.py:49: in test_setup_logger_custom_format
    setup_logger(format=custom_format)
E   TypeError: setup_logger() got an unexpected keyword argument 'format'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_creates_log_directory" time="0.004"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'file'">tests\unit\test_logger.py:59: in test_setup_logger_creates_log_directory
    setup_logger(file=str(log_file))
E   TypeError: setup_logger() got an unexpected keyword argument 'file'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_get_logger_returns_logger_instance" time="0.002"><failure message="TypeError: get_logger() missing 1 required positional argument: 'name'">tests\unit\test_logger.py:66: in test_get_logger_returns_logger_instance
    result = get_logger()
             ^^^^^^^^^^^^
E   TypeError: get_logger() missing 1 required positional argument: 'name'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_get_logger_with_module_name" time="0.003"><failure message="AssertionError: assert &lt;MagicMock na...605361761792'&gt; == &lt;MagicMock id='1605361760112'&gt;&#10;  &#10;  Full diff:&#10;  - &lt;MagicMock id='1605361760112'&gt;&#10;  + &lt;MagicMock name='mock.bind()' id='1605361761792'&gt;">tests\unit\test_logger.py:73: in test_get_logger_with_module_name
    assert result == mock_logger
E   AssertionError: assert &lt;MagicMock na...605361761792'&gt; == &lt;MagicMock id='1605361760112'&gt;
E     
E     Full diff:
E     - &lt;MagicMock id='1605361760112'&gt;
E     + &lt;MagicMock name='mock.bind()' id='1605361761792'&gt;</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_intercept_handler_emit" time="0.003" /><testcase classname="tests.unit.test_logger.TestLogger" name="test_intercept_handler_emit_with_exception" time="0.003" /><testcase classname="tests.unit.test_logger.TestLogger" name="test_intercept_handler_emit_unknown_level" time="0.003" /><testcase classname="tests.unit.test_logger.TestLogger" name="test_intercept_handler_emit_logging_file_frame" time="0.003" /><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_integration" time="0.003"><failure message="TypeError: get_logger() missing 1 required positional argument: 'name'">tests\unit\test_logger.py:143: in test_setup_logger_integration
    logger = get_logger()
             ^^^^^^^^^^^^
E   TypeError: get_logger() missing 1 required positional argument: 'name'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_logger_removes_default_handler" time="0.003"><failure message="AssertionError: Expected 'remove' to have been called.">tests\unit\test_logger.py:150: in test_logger_removes_default_handler
    mock_logger.remove.assert_called()
C:\Python313\Lib\unittest\mock.py:948: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'remove' to have been called.</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_clears_standard_logging_handlers" time="0.003"><failure message="AttributeError: 'builtin_function_or_method' object has no attribute 'assert_called'">tests\unit\test_logger.py:159: in test_setup_logger_clears_standard_logging_handlers
    mock_std_logger.handlers.clear.assert_called()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'builtin_function_or_method' object has no attribute 'assert_called'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_adds_intercept_handler" time="0.003" /><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_valid_levels[DEBUG]" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:174: in test_setup_logger_valid_levels
    setup_logger(level=level)
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_valid_levels[INFO]" time="0.003"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:174: in test_setup_logger_valid_levels
    setup_logger(level=level)
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_valid_levels[WARNING]" time="0.003"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:174: in test_setup_logger_valid_levels
    setup_logger(level=level)
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_valid_levels[ERROR]" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:174: in test_setup_logger_valid_levels
    setup_logger(level=level)
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_valid_levels[CRITICAL]" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:174: in test_setup_logger_valid_levels
    setup_logger(level=level)
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_setup_logger_invalid_level" time="0.002"><failure message="TypeError: setup_logger() got an unexpected keyword argument 'level'">tests\unit\test_logger.py:181: in test_setup_logger_invalid_level
    setup_logger(level="INVALID_LEVEL")
E   TypeError: setup_logger() got an unexpected keyword argument 'level'</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_get_logger_edge_cases" time="0.004"><failure message="AssertionError: assert &lt;MagicMock na...605359521808'&gt; == &lt;MagicMock id='1605361446128'&gt;&#10;  &#10;  Full diff:&#10;  - &lt;MagicMock id='1605361446128'&gt;&#10;  + &lt;MagicMock name='mock.bind()' id='1605359521808'&gt;">tests\unit\test_logger.py:190: in test_get_logger_edge_cases
    assert result == mock_logger
E   AssertionError: assert &lt;MagicMock na...605359521808'&gt; == &lt;MagicMock id='1605361446128'&gt;
E     
E     Full diff:
E     - &lt;MagicMock id='1605361446128'&gt;
E     + &lt;MagicMock name='mock.bind()' id='1605359521808'&gt;</failure></testcase><testcase classname="tests.unit.test_logger.TestLogger" name="test_intercept_handler_edge_cases" time="0.002"><failure message="AttributeError: 'NoneType' object has no attribute 'levelname'">tests\unit\test_logger.py:202: in test_intercept_handler_edge_cases
    handler.emit(None)
shared\utils\logger.py:80: in emit
    level = logger.level(record.levelname).name
                         ^^^^^^^^^^^^^^^^
E   AttributeError: 'NoneType' object has no attribute 'levelname'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_version" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:31: in test_package_version
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_author" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:38: in test_package_author
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_description" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:45: in test_package_description
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_docstring" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:52: in test_package_docstring
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_all_list_definition" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:62: in test_all_list_definition
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_commit_tracker_import" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:72: in test_commit_tracker_import
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_logger_imports" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:81: in test_logger_imports
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_config_import" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:91: in test_config_import
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_error_handling_commit_tracker" time="0.003" /><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_error_handling_logger" time="0.002" /><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_error_handling_config" time="0.002" /><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_all_imports_available" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:121: in test_all_imports_available
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_statement_order" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:128: in test_import_statement_order
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_metadata_consistency" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:141: in test_package_metadata_consistency
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_module_attributes_existence" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:154: in test_module_attributes_existence
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_performance" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:176: in test_import_performance
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_multiple_imports_behavior" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:189: in test_multiple_imports_behavior
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_export_consistency" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:202: in test_export_consistency
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_docstring_formatting" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:217: in test_docstring_formatting
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_version_format" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:233: in test_version_format
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_author_format" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:244: in test_author_format
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_description_format" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:255: in test_description_format
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_import_paths_accuracy" time="0.002"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:266: in test_import_paths_accuracy
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_init.TestRootInit" name="test_package_initialization_completeness" time="0.003"><failure message="ModuleNotFoundError: No module named 'craftnudge_ai_agent'">tests\unit\test_root_init.py:285: in test_package_initialization_completeness
    import craftnudge_ai_agent
E   ModuleNotFoundError: No module named 'craftnudge_ai_agent'</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_sys_path_modification" time="0.002"><failure message="AttributeError: 'list' object attribute 'insert' is read-only">C:\Python313\Lib\unittest\mock.py:1611: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:
tests\unit\test_root_track_commit.py:38: in test_sys_path_modification
    with patch('sys.path.insert') as mock_insert:
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1624: in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1635: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'insert' is read-only</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_main_function_import" time="0.004" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_main_function_execution" time="0.003"><failure message="AssertionError: Expected 'main' to have been called once. Called 0 times.">tests\unit\test_root_track_commit.py:66: in test_main_function_execution
    mock_main.assert_called_once()
C:\Python313\Lib\unittest\mock.py:958: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'main' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_main_function_not_called_on_import" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_file_path_resolution" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_project_root_path_type" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_sys_path_insertion_order" time="0.002"><failure message="AttributeError: 'list' object attribute 'insert' is read-only">C:\Python313\Lib\unittest\mock.py:1611: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:
tests\unit\test_root_track_commit.py:112: in test_sys_path_insertion_order
    with patch('sys.path.insert') as mock_insert:
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1624: in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1635: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'insert' is read-only</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_import_error_handling" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_pathlib_import_error" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_sys_import_error" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_file_not_found_scenario" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_permission_error_scenario" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_sys_path_modification_preserves_existing" time="0.002"><failure message="ModuleNotFoundError: No module named 'track_commit'">tests\unit\test_root_track_commit.py:161: in test_sys_path_modification_preserves_existing
    import track_commit
E   ModuleNotFoundError: No module named 'track_commit'</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_multiple_imports_behavior" time="0.002"><failure message="AttributeError: 'list' object attribute 'insert' is read-only">C:\Python313\Lib\unittest\mock.py:1611: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:
tests\unit\test_root_track_commit.py:174: in test_multiple_imports_behavior
    with patch('sys.path.insert') as mock_insert:
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1624: in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1635: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'insert' is read-only</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_main_function_signature" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_module_docstring" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_shebang_line" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_import_statement_order" time="0.003"><failure message="assert False&#10; +  where False = any(&lt;generator object TestRootTrackCommit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C75F6740&gt;)">tests\unit\test_root_track_commit.py:221: in test_import_statement_order
    assert any('import sys' in line for line in source_lines)
E   assert False
E    +  where False = any(&lt;generator object TestRootTrackCommit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C75F6740&gt;)</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_project_root_calculation" time="0.002" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_sys_path_insertion_with_string_conversion" time="0.002"><failure message="AttributeError: 'list' object attribute 'insert' is read-only">C:\Python313\Lib\unittest\mock.py:1611: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'insert' is read-only

During handling of the above exception, another exception occurred:
tests\unit\test_root_track_commit.py:246: in test_sys_path_insertion_with_string_conversion
    with patch('sys.path.insert') as mock_insert:
         ^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1624: in __enter__
    if not self.__exit__(*sys.exc_info()):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1635: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'insert' is read-only</failure></testcase><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_main_function_availability_after_import" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_module_attributes" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_execution_environment_setup" time="0.003" /><testcase classname="tests.unit.test_root_track_commit.TestRootTrackCommit" name="test_error_handling_in_main_execution" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_docstring_formatting" time="0.003"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C70446C0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C70446C0&gt; = 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.'.startswith&#10; +      where 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.' = &lt;built-in method strip of str object at 0x00000175C70453E0&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C70453E0&gt; = '\nServices - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.\n'.strip">tests\unit\test_services_init.py:48: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C70446C0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C70446C0&gt; = 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.'.startswith
E    +      where 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.' = &lt;built-in method strip of str object at 0x00000175C70453E0&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C70453E0&gt; = '\nServices - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.\n'.strip</failure></testcase><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_structure" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_import_performance" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_multiple_imports_behavior" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_initialization_completeness" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_docstring_content_accuracy" time="0.002" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_metadata_consistency" time="0.004" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_module_attributes_existence" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_import_path" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_initialization_robustness" time="0.002" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_docstring_completeness" time="0.002" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_package_import_consistency" time="0.003" /><testcase classname="tests.unit.test_services_init.TestServicesInit" name="test_docstring_quality" time="0.003"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt; = 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.'.startswith&#10; +      where 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.' = &lt;built-in method strip of str object at 0x00000175C6FF8030&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6FF8030&gt; = '\nServices - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.\n'.strip">tests\unit\test_services_init.py:204: in test_docstring_quality
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FF93E0&gt; = 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.'.startswith
E    +      where 'Services - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.' = &lt;built-in method strip of str object at 0x00000175C6FF8030&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6FF8030&gt; = '\nServices - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains all microservices for the CraftNudge AI Agent.\n'.strip</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_package_version" time="0.003"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, '__version__')">tests\unit\test_shared_config_init.py:38: in test_package_version
    assert hasattr(config_package, '__version__')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, '__version__')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_all_list_definition" time="0.004"><failure message="AssertionError: assert [] == ['get_config'...fault_config']&#10;  &#10;  Right contains 5 more items, first extra item: 'get_config'&#10;  &#10;  Full diff:&#10;  + []&#10;  - [&#10;  -     'get_config',...&#10;  &#10;  ...Full output truncated (5 lines hidden), use '-vv' to show">tests\unit\test_shared_config_init.py:74: in test_all_list_definition
    assert config_package.__all__ == expected_exports
E   AssertionError: assert [] == ['get_config'...fault_config']
E     
E     Right contains 5 more items, first extra item: 'get_config'
E     
E     Full diff:
E     + []
E     - [
E     -     'get_config',...
E     
E     ...Full output truncated (5 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_get_config_import" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config')">tests\unit\test_shared_config_init.py:85: in test_get_config_import
    assert hasattr(config_package, 'get_config')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_get_config_value_import" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config_value')">tests\unit\test_shared_config_init.py:97: in test_get_config_value_import
    assert hasattr(config_package, 'get_config_value')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config_value')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_reload_config_import" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'reload_config')">tests\unit\test_shared_config_init.py:109: in test_reload_config_import
    assert hasattr(config_package, 'reload_config')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'reload_config')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_update_config_import" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'update_config')">tests\unit\test_shared_config_init.py:121: in test_update_config_import
    assert hasattr(config_package, 'update_config')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'update_config')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_create_default_config_import" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'create_default_config')">tests\unit\test_shared_config_init.py:133: in test_create_default_config_import
    assert hasattr(config_package, 'create_default_config')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'create_default_config')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_error_handling_get_config" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_config_init.py:140: in test_import_error_handling_get_config
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_error_handling_get_config_value" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_config_init.py:147: in test_import_error_handling_get_config_value
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_error_handling_reload_config" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_config_init.py:154: in test_import_error_handling_reload_config
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_error_handling_update_config" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_config_init.py:161: in test_import_error_handling_update_config
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_error_handling_create_default_config" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_config_init.py:168: in test_import_error_handling_create_default_config
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_all_imports_available" time="0.003" /><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_statement_order" time="0.003"><failure message="assert False&#10; +  where False = any(&lt;generator object TestSharedConfigInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7385CB0&gt;)">tests\unit\test_shared_config_init.py:194: in test_import_statement_order
    assert any('from .config_manager import (' in line
E   assert False
E    +  where False = any(&lt;generator object TestSharedConfigInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7385CB0&gt;)</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_package_metadata_consistency" time="0.003"><failure message="AttributeError: module 'shared.config' has no attribute '__version__'">tests\unit\test_shared_config_init.py:217: in test_package_metadata_consistency
    assert config_package.__version__ == "1.0.0"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.config' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_module_attributes_existence" time="0.004"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, '__version__')">tests\unit\test_shared_config_init.py:240: in test_module_attributes_existence
    assert hasattr(config_package, attr)
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, '__version__')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_performance" time="0.003" /><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_multiple_imports_behavior" time="0.003"><failure message="AttributeError: module 'shared.config' has no attribute '__version__'">tests\unit\test_shared_config_init.py:271: in test_multiple_imports_behavior
    assert shared.config.__version__ == "1.0.0"
           ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.config' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_export_consistency" time="0.003"><failure message="AssertionError: assert 'config_manager' in []&#10; +  where [] = &lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;.__all__">tests\unit\test_shared_config_init.py:291: in test_export_consistency
    assert attr in config_package.__all__
E   AssertionError: assert 'config_manager' in []
E    +  where [] = &lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;.__all__</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_docstring_formatting" time="0.003"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt; = 'Shared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.'.startswith&#10; +      where 'Shared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.' = &lt;built-in method strip of str object at 0x00000175C6FF9530&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6FF9530&gt; = '\nShared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.\n'.strip">tests\unit\test_shared_config_init.py:305: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FFB4B0&gt; = 'Shared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.'.startswith
E    +      where 'Shared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.' = &lt;built-in method strip of str object at 0x00000175C6FF9530&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6FF9530&gt; = '\nShared Configuration - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared configuration management.\n'.strip</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_version_format" time="0.003"><failure message="AttributeError: module 'shared.config' has no attribute '__version__'">tests\unit\test_shared_config_init.py:323: in test_version_format
    version = config_package.__version__
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.config' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_import_paths_accuracy" time="0.003"><failure message="assert False&#10; +  where False = any(&lt;generator object TestSharedConfigInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7667780&gt;)">tests\unit\test_shared_config_init.py:343: in test_import_paths_accuracy
    assert any('from .config_manager import (' in line
E   assert False
E    +  where False = any(&lt;generator object TestSharedConfigInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7667780&gt;)</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_package_initialization_completeness" time="0.003"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config')">tests\unit\test_shared_config_init.py:366: in test_package_initialization_completeness
    assert hasattr(config_package, 'get_config')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.config' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\__init__.py'&gt;, 'get_config')</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_function_availability" time="0.003"><failure message="AttributeError: module 'shared.config' has no attribute 'get_config'">tests\unit\test_shared_config_init.py:394: in test_function_availability
    assert callable(config_package.get_config)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.config' has no attribute 'get_config'</failure></testcase><testcase classname="tests.unit.test_shared_config_init.TestSharedConfigInit" name="test_function_signatures" time="0.003"><failure message="AttributeError: module 'shared.config' has no attribute 'get_config'">tests\unit\test_shared_config_init.py:419: in test_function_signatures
    assert inspect.isfunction(config_package.get_config)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.config' has no attribute 'get_config'</failure></testcase><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_docstring" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_formatting" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6E5B730&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6E5B730&gt; = 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.'.startswith&#10; +      where 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.' = &lt;built-in method strip of str object at 0x00000175C6E5B310&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E5B310&gt; = '\nShared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.\n'.strip">tests\unit\test_shared_init.py:48: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6E5B730&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6E5B730&gt; = 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.'.startswith
E    +      where 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.' = &lt;built-in method strip of str object at 0x00000175C6E5B310&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E5B310&gt; = '\nShared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.\n'.strip</failure></testcase><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_structure" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_import_performance" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_multiple_imports_behavior" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_initialization_completeness" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_content_accuracy" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_metadata_consistency" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_module_attributes_existence" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_import_path" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_structure" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_initialization_robustness" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_completeness" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_import_consistency" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_quality" time="0.002"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6E5B9F0&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6E5B9F0&gt; = 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.'.startswith&#10; +      where 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.' = &lt;built-in method strip of str object at 0x00000175C6E5B890&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C6E5B890&gt; = '\nShared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.\n'.strip">tests\unit\test_shared_init.py:202: in test_docstring_quality
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6E5B9F0&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6E5B9F0&gt; = 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.'.startswith
E    +      where 'Shared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.' = &lt;built-in method strip of str object at 0x00000175C6E5B890&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C6E5B890&gt; = '\nShared Components - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared components used across all services.\n'.strip</failure></testcase><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_naming_convention" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_accuracy" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_initialization_cleanliness" time="0.003"><failure message="AssertionError: assert 5 == 0&#10; +  where 5 = len(['config_manager', 'error_handler', 'logger', 'config', 'utils'])">tests\unit\test_shared_init.py:237: in test_package_initialization_cleanliness
    assert len(unexpected_public) == 0
E   AssertionError: assert 5 == 0
E    +  where 5 = len(['config_manager', 'error_handler', 'logger', 'config', 'utils'])</failure></testcase><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_consistency_with_project" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_import_reliability" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_maintainability" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_purpose_clarity" time="0.002" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_brevity_and_clarity" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_package_import_simplicity" time="0.003" /><testcase classname="tests.unit.test_shared_init.TestSharedInit" name="test_docstring_consistency_across_imports" time="0.003" /><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_package_version" time="0.008"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, '__version__')">tests\unit\test_shared_utils_init.py:45: in test_package_version
    assert hasattr(utils_package, '__version__')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, '__version__')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_package_docstring" time="0.006" /><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_all_list_definition" time="0.007"><failure message="AssertionError: assert [] == ['get_logger'...onError', ...]&#10;  &#10;  Right contains 12 more items, first extra item: 'get_logger'&#10;  &#10;  Full diff:&#10;  + []&#10;  - [&#10;  -     'get_logger',...&#10;  &#10;  ...Full output truncated (12 lines hidden), use '-vv' to show">tests\unit\test_shared_utils_init.py:102: in test_all_list_definition
    assert utils_package.__all__ == expected_exports
E   AssertionError: assert [] == ['get_logger'...onError', ...]
E     
E     Right contains 12 more items, first extra item: 'get_logger'
E     
E     Full diff:
E     + []
E     - [
E     -     'get_logger',...
E     
E     ...Full output truncated (12 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_logger_imports" time="0.006"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'get_logger')">tests\unit\test_shared_utils_init.py:120: in test_logger_imports
    assert hasattr(utils_package, 'get_logger')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'get_logger')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_error_classes_imports" time="0.007"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'CraftNudgeError')">tests\unit\test_shared_utils_init.py:141: in test_error_classes_imports
    assert hasattr(utils_package, 'CraftNudgeError')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'CraftNudgeError')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_error_handler_functions_imports" time="0.006"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'handle_error')">tests\unit\test_shared_utils_init.py:169: in test_error_handler_functions_imports
    assert hasattr(utils_package, 'handle_error')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'handle_error')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_import_error_handling_logger" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_utils_init.py:185: in test_import_error_handling_logger
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_import_error_handling_error_handler" time="0.003"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">tests\unit\test_shared_utils_init.py:192: in test_import_error_handling_error_handler
    with pytest.raises(ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_all_imports_available" time="0.005" /><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_import_statement_order" time="0.005"><failure message="assert False&#10; +  where False = any(&lt;generator object TestSharedUtilsInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7425BE0&gt;)">tests\unit\test_shared_utils_init.py:232: in test_import_statement_order
    assert any('from .logger import get_logger, setup_logger' in line
E   assert False
E    +  where False = any(&lt;generator object TestSharedUtilsInit.test_import_statement_order.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7425BE0&gt;)</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_package_metadata_consistency" time="0.005"><failure message="AttributeError: module 'shared.utils' has no attribute '__version__'">tests\unit\test_shared_utils_init.py:274: in test_package_metadata_consistency
    assert utils_package.__version__ == "1.0.0"
           ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_module_attributes_existence" time="0.005"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, '__version__')">tests\unit\test_shared_utils_init.py:311: in test_module_attributes_existence
    assert hasattr(utils_package, attr)
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, '__version__')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_import_performance" time="0.004" /><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_multiple_imports_behavior" time="0.004"><failure message="AttributeError: module 'shared.utils' has no attribute '__version__'">tests\unit\test_shared_utils_init.py:356: in test_multiple_imports_behavior
    assert shared.utils.__version__ == "1.0.0"
           ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_export_consistency" time="0.005"><failure message="AssertionError: assert 'error_handler' in []&#10; +  where [] = &lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;.__all__">tests\unit\test_shared_utils_init.py:383: in test_export_consistency
    assert attr in utils_package.__all__
E   AssertionError: assert 'error_handler' in []
E    +  where [] = &lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;.__all__</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_docstring_formatting" time="0.005"><failure message="assert False&#10; +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF8180&gt;('&quot;&quot;&quot;')&#10; +    where &lt;built-in method startswith of str object at 0x00000175C6FF8180&gt; = 'Shared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.'.startswith&#10; +      where 'Shared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.' = &lt;built-in method strip of str object at 0x00000175C7046E20&gt;()&#10; +        where &lt;built-in method strip of str object at 0x00000175C7046E20&gt; = '\nShared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.\n'.strip">tests\unit\test_shared_utils_init.py:404: in test_docstring_formatting
    assert docstring.strip().startswith('"""')
E   assert False
E    +  where False = &lt;built-in method startswith of str object at 0x00000175C6FF8180&gt;('"""')
E    +    where &lt;built-in method startswith of str object at 0x00000175C6FF8180&gt; = 'Shared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.'.startswith
E    +      where 'Shared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.' = &lt;built-in method strip of str object at 0x00000175C7046E20&gt;()
E    +        where &lt;built-in method strip of str object at 0x00000175C7046E20&gt; = '\nShared Utilities - User Story 2.1.1: Behavior Tracker – Git Commit Logger\n\nThis package contains shared utility functions and classes.\n'.strip</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_version_format" time="0.004"><failure message="AttributeError: module 'shared.utils' has no attribute '__version__'">tests\unit\test_shared_utils_init.py:429: in test_version_format
    version = utils_package.__version__
              ^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute '__version__'</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_import_paths_accuracy" time="0.004"><failure message="assert False&#10; +  where False = any(&lt;generator object TestSharedUtilsInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7456740&gt;)">tests\unit\test_shared_utils_init.py:456: in test_import_paths_accuracy
    assert any('from .logger import get_logger, setup_logger' in line
E   assert False
E    +  where False = any(&lt;generator object TestSharedUtilsInit.test_import_paths_accuracy.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C7456740&gt;)</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_package_initialization_completeness" time="0.005"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'get_logger')">tests\unit\test_shared_utils_init.py:498: in test_package_initialization_completeness
    assert hasattr(utils_package, 'get_logger')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;module 'shared.utils' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\__init__.py'&gt;, 'get_logger')</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_error_class_inheritance" time="0.004"><failure message="AttributeError: module 'shared.utils' has no attribute 'CraftNudgeError'">tests\unit\test_shared_utils_init.py:551: in test_error_class_inheritance
    assert issubclass(utils_package.CraftNudgeError, Exception)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute 'CraftNudgeError'</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_function_availability" time="0.004"><failure message="AttributeError: module 'shared.utils' has no attribute 'get_logger'">tests\unit\test_shared_utils_init.py:574: in test_function_availability
    assert callable(utils_package.get_logger)
                    ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute 'get_logger'</failure></testcase><testcase classname="tests.unit.test_shared_utils_init.TestSharedUtilsInit" name="test_function_signatures" time="0.005"><failure message="AttributeError: module 'shared.utils' has no attribute 'get_logger'">tests\unit\test_shared_utils_init.py:610: in test_function_signatures
    assert inspect.isfunction(utils_package.get_logger)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: module 'shared.utils' has no attribute 'get_logger'</failure></testcase><testcase classname="tests.unit.test_source_files.TestSourceFileAnalysis" name="test_all_python_files_exist" time="0.002"><failure message="AssertionError: File track_commit.py does not exist&#10;assert False&#10; +  where False = exists()&#10; +    where exists = WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent/tests/track_commit.py').exists">tests\unit\test_source_files.py:44: in test_all_python_files_exist
    assert full_path.exists(), f"File {file_path} does not exist"
E   AssertionError: File track_commit.py does not exist
E   assert False
E    +  where False = exists()
E    +    where exists = WindowsPath('C:/Projects/Pratice_Microservice/craftnudge-ai-agent/tests/track_commit.py').exists</failure></testcase><testcase classname="tests.unit.test_source_files.TestSourceFileAnalysis" name="test_python_files_are_valid_syntax" time="0.051" /><testcase classname="tests.unit.test_source_files.TestSourceFileAnalysis" name="test_files_have_docstrings" time="0.057" /><testcase classname="tests.unit.test_source_files.TestTrackCommitFile" name="test_track_commit_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'">tests\unit\test_source_files.py:99: in test_track_commit_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestTrackCommitFile" name="test_track_commit_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'">tests\unit\test_source_files.py:118: in test_track_commit_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestConfigManager" name="test_config_manager_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\config\\config_manager.py'">tests\unit\test_source_files.py:134: in test_config_manager_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\config\\config_manager.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestConfigManager" name="test_config_manager_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\config\\config_manager.py'">tests\unit\test_source_files.py:151: in test_config_manager_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\config\\config_manager.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestConfigManager" name="test_config_manager_functions" time="0.002"><failure message="AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'logging'">tests\unit\test_source_files.py:163: in test_config_manager_functions
    with patch('shared.config.config_manager.logging') as mock_logging:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.config.config_manager' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\config\\config_manager.py'&gt; does not have the attribute 'logging'</failure></testcase><testcase classname="tests.unit.test_source_files.TestLogger" name="test_logger_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\logger.py'">tests\unit\test_source_files.py:203: in test_logger_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\logger.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestLogger" name="test_logger_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\logger.py'">tests\unit\test_source_files.py:215: in test_logger_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\logger.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestLogger" name="test_logger_functions" time="0.002" /><testcase classname="tests.unit.test_source_files.TestErrorHandler" name="test_error_handler_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'">tests\unit\test_source_files.py:250: in test_error_handler_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestErrorHandler" name="test_error_handler_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'">tests\unit\test_source_files.py:271: in test_error_handler_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestErrorHandler" name="test_error_handler_classes" time="0.002"><failure message="AttributeError: &lt;module 'shared.utils.error_handler' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\error_handler.py'&gt; does not have the attribute 'logging'">tests\unit\test_source_files.py:283: in test_error_handler_classes
    with patch('shared.utils.error_handler.logging') as mock_logging:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.utils.error_handler' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\error_handler.py'&gt; does not have the attribute 'logging'</failure></testcase><testcase classname="tests.unit.test_source_files.TestErrorHandler" name="test_error_handler_functions" time="0.002"><failure message="AttributeError: &lt;module 'shared.utils.error_handler' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\error_handler.py'&gt; does not have the attribute 'logging'">tests\unit\test_source_files.py:297: in test_error_handler_functions
    with patch('shared.utils.error_handler.logging') as mock_logging:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'shared.utils.error_handler' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\shared\\utils\\error_handler.py'&gt; does not have the attribute 'logging'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCLICommands" name="test_cli_commands_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\cli\\commands\\track_commit.py'">tests\unit\test_source_files.py:327: in test_cli_commands_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\cli\\commands\\track_commit.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCLICommands" name="test_cli_commands_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\cli\\commands\\track_commit.py'">tests\unit\test_source_files.py:339: in test_cli_commands_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\cli\\commands\\track_commit.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCLICommands" name="test_cli_commands_functions" time="0.002" /><testcase classname="tests.unit.test_source_files.TestCommitTracker" name="test_commit_tracker_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\commit_tracker.py'">tests\unit\test_source_files.py:374: in test_commit_tracker_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\commit_tracker.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCommitTracker" name="test_commit_tracker_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\commit_tracker.py'">tests\unit\test_source_files.py:389: in test_commit_tracker_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\commit_tracker.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCommitTracker" name="test_commit_tracker_class" time="0.002"><failure message="AttributeError: &lt;module 'services.commit_tracker_service.src.commit_tracker' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\services\\commit_tracker_service\\src\\commit_tracker.py'&gt; does not have the attribute 'logging'">tests\unit\test_source_files.py:399: in test_commit_tracker_class
    with patch('services.commit_tracker_service.src.commit_tracker.logging') as mock_logging:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'services.commit_tracker_service.src.commit_tracker' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\services\\commit_tracker_service\\src\\commit_tracker.py'&gt; does not have the attribute 'logging'</failure></testcase><testcase classname="tests.unit.test_source_files.TestGitParser" name="test_git_parser_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\git_parser.py'">tests\unit\test_source_files.py:426: in test_git_parser_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\git_parser.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestGitParser" name="test_git_parser_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\git_parser.py'">tests\unit\test_source_files.py:442: in test_git_parser_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\git_parser.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestGitParser" name="test_git_parser_class" time="0.002" /><testcase classname="tests.unit.test_source_files.TestDataWriter" name="test_data_writer_file_structure" time="0.001"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\data_writer.py'">tests\unit\test_source_files.py:478: in test_data_writer_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\data_writer.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestDataWriter" name="test_data_writer_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\data_writer.py'">tests\unit\test_source_files.py:493: in test_data_writer_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\services\\commit-tracker-service\\src\\data_writer.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestDataWriter" name="test_data_writer_class" time="0.002" /><testcase classname="tests.unit.test_source_files.TestBasicUsage" name="test_basic_usage_file_structure" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\examples\\basic_usage.py'">tests\unit\test_source_files.py:529: in test_basic_usage_file_structure
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\examples\\basic_usage.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestBasicUsage" name="test_basic_usage_imports" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\examples\\basic_usage.py'">tests\unit\test_source_files.py:542: in test_basic_usage_imports
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\examples\\basic_usage.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestBasicUsage" name="test_basic_usage_function" time="0.002" /><testcase classname="tests.unit.test_source_files.TestIntegration" name="test_system_integration" time="0.002" /><testcase classname="tests.unit.test_source_files.TestIntegration" name="test_error_handling_integration" time="0.002" /><testcase classname="tests.unit.test_source_files.TestIntegration" name="test_cli_integration" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'track_commit'">tests\unit\test_source_files.py:601: in test_cli_integration
    with patch('cli.commands.track_commit.track_commit') as mock_track_commit:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'track_commit'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCoverage" name="test_all_functions_covered" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'">tests\unit\test_source_files.py:732: in test_all_functions_covered
    with open(full_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\track_commit.py'</failure></testcase><testcase classname="tests.unit.test_source_files.TestCoverage" name="test_all_classes_covered" time="0.002"><failure message="FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'">tests\unit\test_source_files.py:677: in test_all_classes_covered
    with open(full_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\tests\\shared\\utils\\error_handler.py'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_create_argument_parser" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_parser_has_global_options" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_parser_has_subcommands" time="0.004"><failure message="AttributeError: 'ArgumentParser' object has no attribute 'dest'">tests\unit\test_track_commit_cli.py:48: in test_parser_has_subcommands
    subcommands = [action.dest for action in parser._subparsers._group_actions[0].choices.values()]
                   ^^^^^^^^^^^
E   AttributeError: 'ArgumentParser' object has no attribute 'dest'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_latest_command_parser" time="0.004"><failure message="AssertionError: assert 1 == 0&#10; +  where 1 = len([_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)])&#10; +    where [_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)] = &lt;argparse._ArgumentGroup object at 0x00000175C73B1C10&gt;._group_actions&#10; +      where &lt;argparse._ArgumentGroup object at 0x00000175C73B1C10&gt; = ArgumentParser(prog='__main__.py latest', usage=None, description=None, formatter_class=&lt;class 'argparse.HelpFormatter'&gt;, conflict_handler='error', add_help=True)._optionals">tests\unit\test_track_commit_cli.py:60: in test_latest_command_parser
    assert len(latest_parser._optionals._group_actions) == 0
E   AssertionError: assert 1 == 0
E    +  where 1 = len([_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)])
E    +    where [_HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)] = &lt;argparse._ArgumentGroup object at 0x00000175C73B1C10&gt;._group_actions
E    +      where &lt;argparse._ArgumentGroup object at 0x00000175C73B1C10&gt; = ArgumentParser(prog='__main__.py latest', usage=None, description=None, formatter_class=&lt;class 'argparse.HelpFormatter'&gt;, conflict_handler='error', add_help=True)._optionals</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_hash_command_parser" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_list_command_parser" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_search_command_parser" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_output_format_choices[json]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:95: in test_output_format_choices
    args = parser.parse_args(['latest', '--output-format', output_format])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_output_format_choices[text]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:95: in test_output_format_choices
    args = parser.parse_args(['latest', '--output-format', output_format])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_output_format_choices[table]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:95: in test_output_format_choices
    args = parser.parse_args(['latest', '--output-format', output_format])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_log_level_choices[DEBUG]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:104: in test_log_level_choices
    args = parser.parse_args(['latest', '--log-level', log_level])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_log_level_choices[INFO]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:104: in test_log_level_choices
    args = parser.parse_args(['latest', '--log-level', log_level])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_log_level_choices[WARNING]" time="0.006"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:104: in test_log_level_choices
    args = parser.parse_args(['latest', '--log-level', log_level])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestArgumentParser" name="test_log_level_choices[ERROR]" time="0.005"><failure message="SystemExit: 2">tests\unit\test_track_commit_cli.py:104: in test_log_level_choices
    args = parser.parse_args(['latest', '--log-level', log_level])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\argparse.py:1902: in parse_args
    self.error(msg)
C:\Python313\Lib\argparse.py:2658: in error
    self.exit(2, _('%(prog)s: error: %(message)s\n') % args)
C:\Python313\Lib\argparse.py:2645: in exit
    _sys.exit(status)
E   SystemExit: 2</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_track_latest_commit" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_track_commit_by_hash" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_get_repository_info" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_list_commits" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'">C:\Python313\Lib\unittest\mock.py:1423: in patched
    with self.decoration_helper(patched,
C:\Python313\Lib\contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_search_commits_with_criteria" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'">C:\Python313\Lib\unittest\mock.py:1423: in patched
    with self.decoration_helper(patched,
C:\Python313\Lib\contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_search_commits_without_criteria" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'">C:\Python313\Lib\unittest\mock.py:1423: in patched
    with self.decoration_helper(patched,
C:\Python313\Lib\contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestCLIFunctions" name="test_search_commits_applies_limit" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'">C:\Python313\Lib\unittest\mock.py:1423: in patched
    with self.decoration_helper(patched,
C:\Python313\Lib\contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'DataWriter'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_result_json_format" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_result_text_format" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_result_table_format" time="0.014" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_error" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_commit_data" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_commit_data_verbose" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_repository_info" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_commits_list" time="0.002"><failure message="assert False&#10; +  where False = any(&lt;generator object TestOutputFunctions.test_output_text_result_commits_list.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C749C860&gt;)">tests\unit\test_track_commit_cli.py:399: in test_output_text_result_commits_list
    assert any("1. Commit: abc123def" in call for call in print_calls)
E   assert False
E    +  where False = any(&lt;generator object TestOutputFunctions.test_output_text_result_commits_list.&lt;locals&gt;.&lt;genexpr&gt; at 0x00000175C749C860&gt;)</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_text_result_empty_commits" time="0.002" /><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_table_result_no_tabulate" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'tabulate'">tests\unit\test_track_commit_cli.py:423: in test_output_table_result_no_tabulate
    with patch('cli.commands.track_commit.tabulate', side_effect=ImportError):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'tabulate'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_table_result_with_commits" time="0.002"><failure message="AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'tabulate'">tests\unit\test_track_commit_cli.py:456: in test_output_table_result_with_commits
    with patch('cli.commands.track_commit.tabulate', mock_tabulate):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\unittest\mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'cli.commands.track_commit' from 'C:\\Projects\\Pratice_Microservice\\craftnudge-ai-agent\\cli\\commands\\track_commit.py'&gt; does not have the attribute 'tabulate'</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestOutputFunctions" name="test_output_table_result_error" time="0.009" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_latest_command_success" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_hash_command_success" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_error_result" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_exception_handling" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_keyboard_interrupt" time="0.003" /><testcase classname="tests.unit.test_track_commit_cli.TestMainFunction" name="test_main_unknown_command" time="0.007"><failure message="AssertionError: Expected 'exit' to be called once. Called 2 times.&#10;Calls: [call(1), call(1)].">tests\unit\test_track_commit_cli.py:686: in test_main_unknown_command
    mock_exit.assert_called_once_with(1)
C:\Python313\Lib\unittest\mock.py:990: in assert_called_once_with
    raise AssertionError(msg)
E   AssertionError: Expected 'exit' to be called once. Called 2 times.
E   Calls: [call(1), call(1)].</failure></testcase><testcase classname="tests.unit.test_track_commit_cli.TestCLIIntegration" name="test_full_cli_workflow" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIIntegration" name="test_different_commands[latest-log_latest_commit]" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIIntegration" name="test_different_commands[hash-log_commit_by_hash]" time="0.004" /><testcase classname="tests.unit.test_track_commit_cli.TestCLIIntegration" name="test_different_commands[info-get_repository_info]" time="0.004" /></testsuite></testsuites>